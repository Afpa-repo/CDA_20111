Index: src/Controller/CartController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\nnamespace App\\Controller;\r\n\r\nuse App\\Entity\\Cb;\r\nuse App\\Form\\CbType;\r\nuse App\\Service\\CartService;\r\nuse Doctrine\\ORM\\EntityManagerInterface;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\HttpFoundation\\Request;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse \\Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\nclass CartController extends AbstractController {\r\n\r\n    /**\r\n     * function qui affiche le panier\r\n     * @Route(\"/panier\", name=\"cart.index\")\r\n     * @param CartService $cartService\r\n     * @return Response\r\n     */\r\n    public function index(CartService $cartService){\r\n        return $this->render('cart/index.html.twig', [\r\n            'items' => $cartService->getFullCart(),\r\n            'total'=> $cartService->getTotal(),\r\n            'current_menu' => 'panier']\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @Route(\"/panier/validation\", name=\"cart.valid\")\r\n     * @param CartService $cartService\r\n     * @return Response\r\n     */\r\n    public function validation(CartService $cartService, Request $request, EntityManagerInterface $entityManager){\r\n        $cb= New Cb();\r\n        $form= $this->createForm(CbType::class, $cb);\r\n        $form->handleRequest($request);\r\n\r\n        if($form->isSubmitted() && $form->isValid()) {\r\n            $entityManager->persist($cb);\r\n            $entityManager->flush();\r\n            $cartService->empty();\r\n            return $this->redirectToRoute('cart.index');\r\n        }\r\n        return $this->render('cart/validation.html.twig', [\r\n                'items' => $cartService->getFullCart(),\r\n                'total'=> $cartService->getTotal(),\r\n                'formCb' => $form->createView(),\r\n                'current_menu' => 'panier']\r\n        );\r\n    }\r\n\r\n    /**\r\n     * function qui ajoute UN produit $id du panier\r\n     * @Route(\"/panier/add/{id}\", name=\"cart.add\")\r\n     * @param $id\r\n     * @param CartService $cartService\r\n     * @return \\Symfony\\Component\\HttpFoundation\\RedirectResponse\r\n     */\r\n    public function add($id, CartService $cartService){\r\n        $cartService->add($id);\r\n        return $this->redirectToRoute(\"cart.index\", ['current_menu' => 'panier']);\r\n    }\r\n\r\n    /**\r\n     * function qui supprime UN produit $id du panier\r\n     * @Route(\"/panier/remove/{id}\", name=\"cart.remove\")\r\n     * @param $id\r\n     * @param CartService $cartService\r\n     * @return \\Symfony\\Component\\HttpFoundation\\RedirectResponse\r\n     */\r\n    public function remove($id, CartService $cartService): RedirectResponse{\r\n        $cartService->remove($id);\r\n        return $this->redirectToRoute(\"cart.index\", ['current_menu' => 'panier']);\r\n    }\r\n\r\n    /**\r\n     * function qui supprime TOUS les produits $id du panier\r\n     * @Route(\"/panier/removeAll/{id}\", name=\"cart.removeAll\")\r\n     * @param CartService $cartService\r\n     * @return \\Symfony\\Component\\HttpFoundation\\RedirectResponse\r\n     */\r\n    public function removeAll(int $id, CartService $cartService): RedirectResponse{\r\n        $cartService->removeAll($id);\r\n        return $this->redirectToRoute(\"cart.index\", ['current_menu' => 'panier']);\r\n    }\r\n\r\n    /**\r\n     * //function qui vide tout le panier\r\n     * @Route(\"/panier/empty\", name=\"cart.empty\")\r\n     * @param CartService $cartService\r\n     * @return RedirectResponse\r\n     */\r\n    public function empty(CartService $cartService): RedirectResponse{\r\n        $cartService->empty();\r\n        return $this->redirectToRoute(\"cart.index\", ['current_menu' => 'panier']);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/CartController.php b/src/Controller/CartController.php
--- a/src/Controller/CartController.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Controller/CartController.php	(date 1612955061615)
@@ -2,9 +2,15 @@
 namespace App\Controller;
 
 use App\Entity\Cb;
+use App\Entity\Facture;
 use App\Form\CbType;
+use App\Form\FactureType;
+use App\Repository\MembreRepository;
+use App\Repository\CbRepository;
+use App\Repository\ProduitRepository;
 use App\Service\CartService;
 use Doctrine\ORM\EntityManagerInterface;
+use Doctrine\Persistence\ManagerRegistry;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Request;
@@ -13,40 +19,103 @@
 
 class CartController extends AbstractController {
 
+    private $cartService;
+    private $em;
+    private $registry;
+    private $repoProduit;
+    private $repoMembre;
+    private $repoCb;
+
+    public function __construct(
+            CartService $cartService,
+            ProduitRepository $repoProduit,
+            MembreRepository $repoMembre,
+            CbRepository $repoCb,
+            EntityManagerInterface $em)
+
+    {
+        $this->cartService = $cartService;
+        $this->em = $em;
+        $this->repoProduit = $repoProduit;
+        $this->repoMembre = $repoMembre;
+        $this->repoCb = $repoCb;
+    }
+
     /**
      * function qui affiche le panier
      * @Route("/panier", name="cart.index")
-     * @param CartService $cartService
      * @return Response
      */
-    public function index(CartService $cartService){
+    public function index(){
         return $this->render('cart/index.html.twig', [
-            'items' => $cartService->getFullCart(),
-            'total'=> $cartService->getTotal(),
+            'items' => $this->cartService->getFullCart(),
+            'total'=> $this->cartService->getTotal(),
             'current_menu' => 'panier']
         );
     }
 
     /**
-     * @Route("/panier/validation", name="cart.valid")
-     * @param CartService $cartService
+     * @Route("/panier/paiement", name="cart.paiement")
+     * @param Facture $fac
+     * @param Request $request
+     * @return Response
+     */
+    public function paiement(Facture $fac, Request $request)
+    {
+        $membre = $this->repoMembre->find(2);
+
+        $cb= $this->repoCb->findOneBy(['membre_id'=> $membre->id]);
+        var_dump($cd);
+
+        $formCb= $this->createForm(CbType::class, $cb);
+        $formCb->handleRequest($request);
+
+        if($formCb->isSubmitted() && $formCb->isValid()) {
+            //dans l'idéal, les infos sur la carte bancaire sont transférées à la banque,
+            //mais dans le cas de ce projet fictif, on saute cette étape
+
+            //on commence par créer la facture
+            $this->em->persist($fac);
+            $this->em->flush();
+
+
+            //on va donc enregistrer les lignes de commande
+          /*
+            $this->em->persist($cb);
+            $this->em->flush();
+            */
+            $this->cartService->empty();
+            $this->addFlash('success', 'Votre paiement a bien été pris en compte. La facture concernant votre commande vient de vous être envoyée par email.');
+            return $this->render('cart/index.html.twig', ['current_menu' => 'panier']);
+        }
+
+        return $this->render('cart/paiement.html.twig', [
+            'items' => $this->cartService->getFullCart(),
+            'total'=> $this->cartService->getTotal(),
+            'formCb' => $formCb->createView(),
+            'sub_menu' => 'paiement',
+            'current_menu' => 'panier']);
+    }
+
+
+        /**
+     * @Route("/panier/validation", name="cart.validation")
      * @return Response
      */
-    public function validation(CartService $cartService, Request $request, EntityManagerInterface $entityManager){
-        $cb= New Cb();
-        $form= $this->createForm(CbType::class, $cb);
-        $form->handleRequest($request);
+    public function validation(Request $request){
+        $fac= New Facture();
+        $formFac= $this->createForm(FactureType::class, $fac);
+        $formFac->handleRequest($request);
 
-        if($form->isSubmitted() && $form->isValid()) {
-            $entityManager->persist($cb);
-            $entityManager->flush();
-            $cartService->empty();
-            return $this->redirectToRoute('cart.index');
+        if($formFac->isSubmitted() && $formFac->isValid()) {
+            return $this->paiement($fac, $request);
         }
+
         return $this->render('cart/validation.html.twig', [
-                'items' => $cartService->getFullCart(),
-                'total'=> $cartService->getTotal(),
-                'formCb' => $form->createView(),
+                'items' => $this->cartService->getFullCart(),
+                'total'=> $this->cartService->getTotal(),
+                'formFac' => $formFac->createView(),
+                'sub_menu' => 'validation',
                 'current_menu' => 'panier']
         );
     }
@@ -58,8 +127,8 @@
      * @param CartService $cartService
      * @return \Symfony\Component\HttpFoundation\RedirectResponse
      */
-    public function add($id, CartService $cartService){
-        $cartService->add($id);
+    public function add(int $id){
+        $this->cartService->add($id);
         return $this->redirectToRoute("cart.index", ['current_menu' => 'panier']);
     }
 
@@ -67,33 +136,30 @@
      * function qui supprime UN produit $id du panier
      * @Route("/panier/remove/{id}", name="cart.remove")
      * @param $id
-     * @param CartService $cartService
-     * @return \Symfony\Component\HttpFoundation\RedirectResponse
+     * @return RedirectResponse
      */
-    public function remove($id, CartService $cartService): RedirectResponse{
-        $cartService->remove($id);
+    public function remove(int $id): RedirectResponse{
+        $this->cartService->remove($id);
         return $this->redirectToRoute("cart.index", ['current_menu' => 'panier']);
     }
 
     /**
      * function qui supprime TOUS les produits $id du panier
      * @Route("/panier/removeAll/{id}", name="cart.removeAll")
-     * @param CartService $cartService
      * @return \Symfony\Component\HttpFoundation\RedirectResponse
      */
-    public function removeAll(int $id, CartService $cartService): RedirectResponse{
-        $cartService->removeAll($id);
+    public function removeAll(int $id): RedirectResponse{
+        $this->cartService->removeAll($id);
         return $this->redirectToRoute("cart.index", ['current_menu' => 'panier']);
     }
 
     /**
      * //function qui vide tout le panier
      * @Route("/panier/empty", name="cart.empty")
-     * @param CartService $cartService
      * @return RedirectResponse
      */
-    public function empty(CartService $cartService): RedirectResponse{
-        $cartService->empty();
+    public function empty(): RedirectResponse{
+        $this->cartService->empty();
         return $this->redirectToRoute("cart.index", ['current_menu' => 'panier']);
     }
 }
\ No newline at end of file
Index: src/Entity/Cb.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\nuse App\\Repository\\CbRepository;\r\n\r\n/**\r\n * Cb\r\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\CbRepository\", repositoryClass=CbRepository::class)\r\n * @ORM\\Table(name=\"cb\", indexes={@ORM\\Index(name=\"membre_id\", columns={\"membre_id\"})})\r\n */\r\nclass Cb\r\n{\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"nom\", type=\"string\", length=50, nullable=false)\r\n     */\r\n    private $nom;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"prenom\", type=\"string\", length=50, nullable=false)\r\n     */\r\n    private $prenom;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"numero\", type=\"string\", length=255, nullable=false)\r\n     */\r\n    private $numero;\r\n\r\n    /**\r\n     * @var \\DateTime\r\n     *\r\n     * @ORM\\Column(name=\"date\", type=\"date\", nullable=false)\r\n     */\r\n    private $date;\r\n\r\n    /**\r\n     * @var \\Membre\r\n     *\r\n     * @ORM\\ManyToOne(targetEntity=\"Membre\")\r\n     * @ORM\\JoinColumns({\r\n     *   @ORM\\JoinColumn(name=\"membre_id\", referencedColumnName=\"id\")\r\n     * })\r\n     */\r\n    private $membre;\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getNom(): ?string\r\n    {\r\n        return $this->nom;\r\n    }\r\n\r\n    public function setNom(string $nom): self\r\n    {\r\n        $this->nom = $nom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPrenom(): ?string\r\n    {\r\n        return $this->prenom;\r\n    }\r\n\r\n    public function setPrenom(string $prenom): self\r\n    {\r\n        $this->prenom = $prenom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getNumero(): ?string\r\n    {\r\n        return $this->numero;\r\n    }\r\n\r\n    public function setNumero(string $numero): self\r\n    {\r\n        $this->numero = $numero;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDate(): ?\\DateTimeInterface\r\n    {\r\n        return $this->date;\r\n    }\r\n\r\n    public function setDate(\\DateTimeInterface $date): self\r\n    {\r\n        $this->date = $date;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getMembre(): ?Membre\r\n    {\r\n        return $this->membre;\r\n    }\r\n\r\n    public function setMembre(?Membre $membre): self\r\n    {\r\n        $this->membre = $membre;\r\n\r\n        return $this;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Cb.php b/src/Entity/Cb.php
--- a/src/Entity/Cb.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Entity/Cb.php	(date 1612955061778)
@@ -2,8 +2,11 @@
 
 namespace App\Entity;
 
+use DateTime;
 use Doctrine\ORM\Mapping as ORM;
 use App\Repository\CbRepository;
+use App\Entity\Membre;
+use Symfony\Component\Validator\Constraints as Assert;
 
 /**
  * Cb
@@ -25,6 +28,7 @@
      * @var string
      *
      * @ORM\Column(name="nom", type="string", length=50, nullable=false)
+     * @Assert\Length(min=1, max=50)
      */
     private $nom;
 
@@ -32,6 +36,7 @@
      * @var string
      *
      * @ORM\Column(name="prenom", type="string", length=50, nullable=false)
+     * @Assert\Length(min=1, max=50)
      */
     private $prenom;
 
@@ -39,18 +44,20 @@
      * @var string
      *
      * @ORM\Column(name="numero", type="string", length=255, nullable=false)
+     * @Assert\Length(min=1, max=255)
      */
     private $numero;
 
     /**
-     * @var \DateTime
+     * @var string
      *
-     * @ORM\Column(name="date", type="date", nullable=false)
+     * @ORM\Column(name="date", type="string", nullable=false)
+     * @Assert\Length(min=5, max=5)
      */
     private $date;
 
     /**
-     * @var \Membre
+     * @var Membre
      *
      * @ORM\ManyToOne(targetEntity="Membre")
      * @ORM\JoinColumns({
@@ -59,6 +66,17 @@
      */
     private $membre;
 
+    /**
+     * @var string
+     *
+     * @ORM\Column(name="lastDigits", type="string", nullable=false)
+     * @Assert\Length(min=4, max=4)
+     */
+    private $lastDigits;
+
+    public function __construct(){
+    }
+
     public function getId(): ?int
     {
         return $this->id;
@@ -95,20 +113,30 @@
 
     public function setNumero(string $numero): self
     {
-        $this->numero = $numero;
+        $this->numero = password_hash($numero, PASSWORD_BCRYPT, ['cost' => 12]);
 
         return $this;
     }
 
-    public function getDate(): ?\DateTimeInterface
+    public function getDate(): string
     {
         return $this->date;
     }
 
-    public function setDate(\DateTimeInterface $date): self
+    public function setDate(array $expiration): self
+    {
+        $this->date = $expiration[0].'/'.$expiration[1];
+        return $this;
+    }
+
+    public function getLastDigits(): string
     {
-        $this->date = $date;
+        return $this->lastDigits;
+    }
 
+    public function setLastDigits($lastDigits): self
+    {
+        $this->lastDigits = $lastDigits;
         return $this;
     }
 
@@ -120,7 +148,6 @@
     public function setMembre(?Membre $membre): self
     {
         $this->membre = $membre;
-
         return $this;
     }
 
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n###> symfony/framework-bundle ###\r\n/.env.local\r\n/.env.local.php\r\n/.env.*.local\r\n/config/secrets/prod/prod.decrypt.private.php\r\n/public/bundles/\r\n/var/\r\n/vendor/\r\n###< symfony/framework-bundle ###\r\n\r\n###> symfony/phpunit-bridge ###\r\n.phpunit\r\n.phpunit.result.cache\r\n/phpunit.xml\r\n###< symfony/phpunit-bridge ###\r\n\r\n###> symfony/web-server-bundle ###\r\n/.web-server-pid\r\n###< symfony/web-server-bundle ###\r\n\r\n###> liip/imagine-bundle ###\r\n/public/media/cache/\r\n###< liip/imagine-bundle ###\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/.gitignore	(date 1612957134550)
@@ -7,6 +7,7 @@
 /public/bundles/
 /var/
 /vendor/
+/.idea/
 ###< symfony/framework-bundle ###
 
 ###> symfony/phpunit-bridge ###
@@ -15,10 +16,3 @@
 /phpunit.xml
 ###< symfony/phpunit-bridge ###
 
-###> symfony/web-server-bundle ###
-/.web-server-pid
-###< symfony/web-server-bundle ###
-
-###> liip/imagine-bundle ###
-/public/media/cache/
-###< liip/imagine-bundle ###
Index: src/Entity/Produit.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse Cocur\\Slugify\\Slugify;\r\nuse App\\Repository\\ProduitRepository;\r\nuse Doctrine\\Common\\Collections\\ArrayCollection;\r\nuse Doctrine\\Common\\Collections\\Collection;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\n\r\n/**\r\n * Produit\r\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\ProduitRepository\", repositoryClass=ProduitRepository::class)\r\n * @ORM\\Table(name=\"produit\", uniqueConstraints={@ORM\\UniqueConstraint(name=\"ref\", columns={\"ref\"})}, indexes={@ORM\\Index(name=\"four_id\", columns={\"four_id\"}), @ORM\\Index(name=\"tp_id\", columns={\"tp_id\"})})\r\n */\r\nclass Produit\r\n{\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"nom\", type=\"string\", length=150, nullable=false)\r\n     */\r\n    private $nom;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"ref\", type=\"string\", length=10, nullable=false)\r\n     */\r\n    private $ref;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"stock\", type=\"decimal\", precision=15, scale=2, nullable=true)\r\n     */\r\n    private $stock;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"prix\", type=\"decimal\", precision=6, scale=2, nullable=false)\r\n     */\r\n    private $prix;\r\n\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"nbUniteMesure\", type=\"integer\", nullable=false)\r\n     */\r\n    private $nbunitemesure;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"uniteMesure\", type=\"string\", length=20, nullable=false)\r\n     */\r\n    private $unitemesure;\r\n\r\n    /**\r\n     * @var bool|null\r\n     *\r\n     * @ORM\\Column(name=\"saison\", type=\"boolean\", nullable=true)\r\n     */\r\n    private $saison;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"descr\", type=\"text\", length=65535, nullable=true)\r\n     */\r\n    private $descr;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"photo\", type=\"string\", length=255, nullable=false)\r\n     */\r\n    private $photo;\r\n\r\n    /**\r\n     * @var \\TypeProduit\r\n     *\r\n     * @ORM\\ManyToOne(targetEntity=\"TypeProduit\")\r\n     * @ORM\\JoinColumns({\r\n     *   @ORM\\JoinColumn(name=\"tp_id\", referencedColumnName=\"id\")\r\n     * })\r\n     */\r\n    private $tp;\r\n\r\n    /**\r\n     * @var \\Fournisseur\r\n     *\r\n     * @ORM\\ManyToOne(targetEntity=\"Fournisseur\")\r\n     * @ORM\\JoinColumns({\r\n     *   @ORM\\JoinColumn(name=\"four_id\", referencedColumnName=\"id\")\r\n     * })\r\n     */\r\n    private $four;\r\n\r\n    /**\r\n     * @var \\Doctrine\\Common\\Collections\\Collection\r\n     *\r\n     * @ORM\\ManyToMany(targetEntity=\"Recette\", inversedBy=\"produit\")\r\n     * @ORM\\JoinTable(name=\"ingredient\",\r\n     *   joinColumns={\r\n     *     @ORM\\JoinColumn(name=\"produit_id\", referencedColumnName=\"id\")\r\n     *   },\r\n     *   inverseJoinColumns={\r\n     *     @ORM\\JoinColumn(name=\"recette_id\", referencedColumnName=\"id\")\r\n     *   }\r\n     * )\r\n     */\r\n    private $recette;\r\n\r\n    /**\r\n     * @var \\Doctrine\\Common\\Collections\\Collection\r\n     *\r\n     * @ORM\\ManyToMany(targetEntity=\"Commande\", inversedBy=\"produit\")\r\n     * @ORM\\JoinTable(name=\"ligne_commande\",\r\n     *   joinColumns={\r\n     *     @ORM\\JoinColumn(name=\"produit_id\", referencedColumnName=\"id\")\r\n     *   },\r\n     *   inverseJoinColumns={\r\n     *     @ORM\\JoinColumn(name=\"commande_id\", referencedColumnName=\"id\")\r\n     *   }\r\n     * )\r\n     */\r\n    private $commande;\r\n\r\n    /**\r\n     * @var \\Doctrine\\Common\\Collections\\Collection\r\n     *\r\n     * @ORM\\ManyToMany(targetEntity=\"Membre\", inversedBy=\"produit\")\r\n     * @ORM\\JoinTable(name=\"produit_favori\",\r\n     *   joinColumns={\r\n     *     @ORM\\JoinColumn(name=\"produit_id\", referencedColumnName=\"id\")\r\n     *   },\r\n     *   inverseJoinColumns={\r\n     *     @ORM\\JoinColumn(name=\"membre_id\", referencedColumnName=\"id\")\r\n     *   }\r\n     * )\r\n     */\r\n    private $membre;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    public function __construct()\r\n    {\r\n        $this->recette = new \\Doctrine\\Common\\Collections\\ArrayCollection();\r\n        $this->commande = new \\Doctrine\\Common\\Collections\\ArrayCollection();\r\n        $this->membre = new \\Doctrine\\Common\\Collections\\ArrayCollection();\r\n    }\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getNom(): ?string\r\n    {\r\n        return $this->nom;\r\n    }\r\n\r\n    public function setNom(string $nom): self\r\n    {\r\n        $this->nom = $nom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getSlug(): string\r\n    {\r\n        return (new Slugify())->slugify($this->nom);\r\n    }\r\n\r\n    public function getRef(): ?string\r\n    {\r\n        return $this->ref;\r\n    }\r\n\r\n    public function setRef(string $ref): self\r\n    {\r\n        $this->ref = $ref;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getStock(): ?string\r\n    {\r\n        return $this->stock;\r\n    }\r\n\r\n    public function setStock(?string $stock): self\r\n    {\r\n        $this->stock = $stock;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPrix(): ?string\r\n    {\r\n        return $this->prix;\r\n    }\r\n\r\n    public function setPrix(string $prix): self\r\n    {\r\n        $this->prix = $prix;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getNbunitemesure(): ?int\r\n    {\r\n        return $this->nbunitemesure;\r\n    }\r\n\r\n    public function setNbunitemesure(int $nbunitemesure): self\r\n    {\r\n        $this->nbunitemesure = $nbunitemesure;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getUnitemesure(): ?string\r\n    {\r\n        return $this->unitemesure;\r\n    }\r\n\r\n    public function setUnitemesure(string $unitemesure): self\r\n    {\r\n        $this->unitemesure = $unitemesure;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getSaison(): ?bool\r\n    {\r\n        return $this->saison;\r\n    }\r\n\r\n    public function setSaison(?bool $saison): self\r\n    {\r\n        $this->saison = $saison;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDescr(): ?string\r\n    {\r\n        return $this->descr;\r\n    }\r\n\r\n    public function setDescr(?string $descr): self\r\n    {\r\n        $this->descr = $descr;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPhoto(): ?string\r\n    {\r\n        return $this->photo;\r\n    }\r\n\r\n    public function setPhoto(string $photo): self\r\n    {\r\n        $this->photo = $photo;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTp(): ?TypeProduit\r\n    {\r\n        return $this->tp;\r\n    }\r\n\r\n    public function setTp(?TypeProduit $tp): self\r\n    {\r\n        $this->tp = $tp;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getFour(): ?Fournisseur\r\n    {\r\n        return $this->four;\r\n    }\r\n\r\n    public function setFour(?Fournisseur $four): self\r\n    {\r\n        $this->four = $four;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Recette[]\r\n     */\r\n    public function getRecette(): Collection\r\n    {\r\n        return $this->recette;\r\n    }\r\n\r\n    public function addRecette(Recette $recette): self\r\n    {\r\n        if (!$this->recette->contains($recette)) {\r\n            $this->recette[] = $recette;\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeRecette(Recette $recette): self\r\n    {\r\n        $this->recette->removeElement($recette);\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Commande[]\r\n     */\r\n    public function getCommande(): Collection\r\n    {\r\n        return $this->commande;\r\n    }\r\n\r\n    public function addCommande(Commande $commande): self\r\n    {\r\n        if (!$this->commande->contains($commande)) {\r\n            $this->commande[] = $commande;\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeCommande(Commande $commande): self\r\n    {\r\n        $this->commande->removeElement($commande);\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Membre[]\r\n     */\r\n    public function getMembre(): Collection\r\n    {\r\n        return $this->membre;\r\n    }\r\n\r\n    public function addMembre(Membre $membre): self\r\n    {\r\n        if (!$this->membre->contains($membre)) {\r\n            $this->membre[] = $membre;\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeMembre(Membre $membre): self\r\n    {\r\n        $this->membre->removeElement($membre);\r\n\r\n        return $this;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Produit.php b/src/Entity/Produit.php
--- a/src/Entity/Produit.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Entity/Produit.php	(date 1612955061786)
@@ -4,7 +4,6 @@
 
 use Cocur\Slugify\Slugify;
 use App\Repository\ProduitRepository;
-use Doctrine\Common\Collections\ArrayCollection;
 use Doctrine\Common\Collections\Collection;
 use Doctrine\ORM\Mapping as ORM;
 
@@ -13,6 +12,8 @@
  * @ORM\Entity(repositoryClass="App\Repository\ProduitRepository", repositoryClass=ProduitRepository::class)
  * @ORM\Table(name="produit", uniqueConstraints={@ORM\UniqueConstraint(name="ref", columns={"ref"})}, indexes={@ORM\Index(name="four_id", columns={"four_id"}), @ORM\Index(name="tp_id", columns={"tp_id"})})
  */
+
+
 class Produit
 {
     /**
Index: templates/cart/validation.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends  'base.html.twig' %}\r\n{% block title 'Validation'%}\r\n{% block body %}\r\n    <div class=\"col-12 row d-flex justify-content-center \">\r\n    <h1 class=\"mb-5\">Récapitulatif de commande</h1>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n    <div class=\"col-6 \">\r\n<p class=\"mb-5\">Facturation</p>\r\n        <table class=\"table table-bordered\">\r\n            <thead class=\"thead-dark\">\r\n            <tr>\r\n                <th>Libellé de l'article</th>\r\n                <th>Prix</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {% for item in items %}\r\n                <tr>\r\n                    <td>{{ item.produit.nom }} x {{item.quantite}}</td>\r\n                    <td>{{ item.produit.prix }}</td>\r\n                </tr>\r\n            {% endfor %}\r\n\r\n            </tbody>\r\n            <tfoot>\r\n            <tr>\r\n                <td>Total:</td>\r\n                <td >{{ total }} €</td>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n    </div>\r\n\r\n    <div class=\"col-6\">\r\n    <p class=\"mb-5\">Moyens de paiement</p>\r\n\r\n        <!--ACCORDION-->\r\n    <div class=\"accordion\" id=\"accordionExample\">\r\n        <!--CB-->\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingOne\">\r\n                <h2 class=\"mb-0\">\r\n                    <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                        Carte de crédit\r\n                    </button>\r\n                </h2>\r\n            </div>\r\n\r\n            <div id=\"collapseOne\" class=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n                <div class=\"card-body\">\r\n                    {{ form_start(formCb) }}\r\n                    {{ form_row(formCb.nom,{'attr' : {'placeholder': \"Nom du titulaire de la carte\" }}) }}\r\n                    {{ form_row(formCb.prenom,{'attr' : {'placeholder': \"Prénom du titulaire de la carte\" }}) }}\r\n                    {{ form_row(formCb.numero,{'attr' : {'placeholder': \"Numéro de carte\" }}) }}\r\n                    {{ form_row(formCb.date) }}<!--Trouver un meilleur format pour la date mm/yy-->\r\n                    <button type=\"submit\" class=\"btn btn-success\">Valider</button>\r\n                    {{ form_end(formCb) }}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--PAYPAL-->\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingTwo\">\r\n                <h2 class=\"mb-0\">\r\n                    <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Paypal\r\n                    </button>\r\n                </h2>\r\n            </div>\r\n            <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n                <div class=\"card-body\">\r\n                    <a href=\"#\"><button class=\"btn btn-primary\">Redirection Paypal</button></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--CPS-->\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n                <h2 class=\"mb-0\">\r\n                    <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Coupon CPS\r\n                    </button>\r\n                </h2>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordionExample\">\r\n                <div class=\"card-body\">\r\n                    <a href=\"#\"><button class=\"btn btn-primary\">Redirection Sandoz</button></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/cart/validation.html.twig b/templates/cart/validation.html.twig
--- a/templates/cart/validation.html.twig	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/templates/cart/validation.html.twig	(date 1612955061797)
@@ -1,98 +1,83 @@
 {% extends  'base.html.twig' %}
 {% block title 'Validation'%}
 {% block body %}
-    <div class="col-12 row d-flex justify-content-center ">
-    <h1 class="mb-5">Récapitulatif de commande</h1>
+<div class="container mt-2">
+    <div class="row">
+        <div class="col-12">
+            <h1 class="mb-5">Validation de la commande</h1>
+        </div>
     </div>
-
     <div class="row">
-    <div class="col-6 ">
-<p class="mb-5">Facturation</p>
-        <table class="table table-bordered">
-            <thead class="thead-dark">
-            <tr>
-                <th>Libellé de l'article</th>
-                <th>Prix</th>
-            </tr>
-            </thead>
-            <tbody>
-            {% for item in items %}
-                <tr>
-                    <td>{{ item.produit.nom }} x {{item.quantite}}</td>
-                    <td>{{ item.produit.prix }}</td>
-                </tr>
-            {% endfor %}
+        <div class="col-6">
+            <h2 class="mb-4">Récapitulatif de la commande</h2>
+            <table class="table table-bordered col-12">
+                    <thead class="thead-dark">
+                    <tr>
+                        <th>Produit</th>
+                        <th>Quantité</th>
+                        <th>Total</th>
+                    </tr>
+                    </thead>
+                    <tbody>
+                    {% for item in items %}
+                        <tr>
+                            <td>{{ item.produit.nom }}</td>
+                            <td>{{item.quantite * item.produit.nbUniteMesure}} {{item.produit.uniteMesure}}</td>
+                            <td>{{ item.produit.prix * item.quantite}}€</td>
+                        </tr>
+                    {% endfor %}
 
-            </tbody>
-            <tfoot>
-            <tr>
-                <td>Total:</td>
-                <td >{{ total }} €</td>
-            </tr>
-            </tfoot>
-        </table>
-    </div>
-
-    <div class="col-6">
-    <p class="mb-5">Moyens de paiement</p>
-
-        <!--ACCORDION-->
-    <div class="accordion" id="accordionExample">
-        <!--CB-->
-        <div class="card">
-            <div class="card-header" id="headingOne">
-                <h2 class="mb-0">
-                    <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
-                        Carte de crédit
-                    </button>
-                </h2>
-            </div>
-
-            <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
-                <div class="card-body">
-                    {{ form_start(formCb) }}
-                    {{ form_row(formCb.nom,{'attr' : {'placeholder': "Nom du titulaire de la carte" }}) }}
-                    {{ form_row(formCb.prenom,{'attr' : {'placeholder': "Prénom du titulaire de la carte" }}) }}
-                    {{ form_row(formCb.numero,{'attr' : {'placeholder': "Numéro de carte" }}) }}
-                    {{ form_row(formCb.date) }}<!--Trouver un meilleur format pour la date mm/yy-->
-                    <button type="submit" class="btn btn-success">Valider</button>
-                    {{ form_end(formCb) }}
-
+                    </tbody>
+                    <tfoot>
+                    <tr>
+                        <td class="text-right" colspan="2">Total:</td>
+                        <td class="h4">{{ total }}€</td>
+                    </tr>
+                    </tfoot>
+                </table>
+        </div>
+        <div class="col-6 ">
+        <!---FACTURATION----->
+            <div class="container">
+                <div class="row">
+                    <div class="col-12 mb-4">
+                        <h2>Adresse de Facturation</h2>
+                    </div>
                 </div>
-            </div>
-        </div>
-        <!--PAYPAL-->
-        <div class="card">
-            <div class="card-header" id="headingTwo">
-                <h2 class="mb-0">
-                    <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
-                        Paypal
-                    </button>
-                </h2>
-            </div>
-            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
-                <div class="card-body">
-                    <a href="#"><button class="btn btn-primary">Redirection Paypal</button></a>
-                </div>
-            </div>
-        </div>
-        <!--CPS-->
-        <div class="card">
-            <div class="card-header" id="headingThree">
-                <h2 class="mb-0">
-                    <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
-                        Coupon CPS
-                    </button>
-                </h2>
-            </div>
-            <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample">
-                <div class="card-body">
-                    <a href="#"><button class="btn btn-primary">Redirection Sandoz</button></a>
+                <div class="row">
+                    {{ form_start(formFac) }}
+                    <div class="col-12">
+                        {{ form_row(formFac.civilite) }}
+                    </div>
+                </div>
+                <div class="row">
+                    <div class="col-6">
+                        {{ form_row(formFac.nom) }}
+                    </div>
+                    <div class="col-6">
+                        {{ form_row(formFac.prenom) }}
+                    </div>
+                </div>
+                <div class="row">
+                    <div class="col-12">
+                        {{ form_row(formFac.adresse1) }}
+                        {{ form_row(formFac.adresse2) }}
+                        {{ form_row(formFac.cp) }}
+                        {{ form_row(formFac.ville) }}
+                        <div class="form-check mb-2">
+                            <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
+                            <label class="form-check-label text-justify" for="flexCheckDefault">
+                                Enregistrez cette adresse en tant qu'adresse de facturation principale
+                            </label>
+                        </div>
+                        {{ form_row(formFac.paiement) }}
+                        <button type="submit" class="btn btn-success">Valider</button>
+                        {{ form_end(formFac) }}
+                    </div>
                 </div>
             </div>
-        </div>
-    </div>
-    </div>
-    </div>
+            <div>
+            </div>
+        </div>
 
 {% endblock %}
\ No newline at end of file
Index: templates/cart/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends  'base.html.twig' %}\r\n\r\n{% block title 'Mon Panier'%}\r\n\r\n{% block body %}\r\n    <div class=\"container mt-2\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n                <h1>Mon Panier</h1>\r\n            </div>\r\n            <div class=\"col-6  text-right mt-4 mb-2\">\r\n                {% if items|length > 0 %}\r\n                <a href=\"{{ path('cart.empty') }}\" class=\"btn btn-sm btn-outline-success\" title=\"Vider le panier\">Vider le panier</a>\r\n                {% endif %}\r\n            </div>\r\n        </div>\r\n\r\n        {% if items|length > 0 %}\r\n        <table class=\"table table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th>Produit</th>\r\n                <th>Référence</th>\r\n                <th>Prix</th>\r\n                <th>Quantité</th>\r\n                <th>Total</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody\r\n            {% for item in items  %}\r\n                <tr>\r\n                    <td>\r\n                        <img style=\"max-height:5rem;max-width:10rem\" src=\"./assets/img/produit/{{ item.produit.photo }}\" title=\"{{ item.produit.nom }}\" alt=\"{{ item.produit.nom }} de {{ item.produit.four }}\">\r\n                    </td>\r\n                    <td>{{ item.produit.nom }}</td>\r\n                    <td>{{ item.produit.ref }}</td>\r\n                    <td>{{ item.produit.prix }} € / {{ item.produit.nbUniteMesure }} {{ item.produit.uniteMesure }}</td>\r\n                    <td>\r\n                        <a href=\"{{ path('cart.remove', {'id': item.produit.id}) }}\" title=\"Réduire la quantié de ce produit\" class=\"btn btn-sm btn-outline-danger\"><i class=\"fas fa-minus\"></i></a>\r\n                        <a href=\"{{ path('cart.add', {'id': item.produit.id}) }}\" title=\"Augmenter la quantité de ce produit\" class=\"btn btn-sm btn-outline-primary\"><i class=\"fas fa-plus\"></i></a>\r\n                        {{ item.quantite * item.produit.nbUniteMesure }} {{ item.produit.uniteMesure }}</td>\r\n                    <td>{{ item.produit.prix * item.quantite}} €</td>\r\n                    <td><a href=\"{{ path('cart.removeAll', {'id': item.produit.id}) }}\" title=\"Supprimer ce produit du panier\" class=\"btn text-danger\"><i class=\"fa fa-trash\"></i></a></td>\r\n                </tr>\r\n            {% endfor %}\r\n            </tbody>\r\n            <tfoot>\r\n            <tr>\r\n                <td colspan=\"4\" class=\"text-right\"><a href=\"{{ path('cart.valid') }}\" class=\"btn btn-success\" title=\"Valider le panier\">Valider le panier</a></td>\r\n                <td class=\"align-middle text-right\">Total:</td>\r\n                <td class=\"h3 align-middle\">{{ total }} €</td>\r\n                <td></td>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n\r\n\r\n        {% else %}\r\n        <p>Votre panier est vide.</p>\r\n        {% endif %}\r\n    </div>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/cart/index.html.twig b/templates/cart/index.html.twig
--- a/templates/cart/index.html.twig	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/templates/cart/index.html.twig	(date 1612955061805)
@@ -48,7 +48,7 @@
             </tbody>
             <tfoot>
             <tr>
-                <td colspan="4" class="text-right"><a href="{{ path('cart.valid') }}" class="btn btn-success" title="Valider le panier">Valider le panier</a></td>
+                <td colspan="4" class="text-right"><a href="{{ path('cart.validation') }}" class="btn btn-success" title="Valider le panier">Valider le panier</a></td>
                 <td class="align-middle text-right">Total:</td>
                 <td class="h3 align-middle">{{ total }} €</td>
                 <td></td>
Index: templates/cart/paiement.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/cart/paiement.html.twig b/templates/cart/paiement.html.twig
new file mode 100644
--- /dev/null	(date 1612956137805)
+++ b/templates/cart/paiement.html.twig	(date 1612956137805)
@@ -0,0 +1,58 @@
+{% extends  'base.html.twig' %}
+{% block title 'Paiement'%}
+{% block body %}
+<!--MOYEN DE PAIEMENT---->
+<div class="container">
+    <div class="row">
+        <div class="col-12 mb-4">
+            <h2>Moyen de paiement</h2>
+        </div>
+    </div>
+    <div class="row">
+        <div class="col-12 accordion" id="accordionExample">
+            <div class="card">
+                <div class="card-header" id="headingOne">
+                    <button class="btn btn-link collapsed h3 mb-0" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
+                        Carte bancaire
+                    </button>
+                </div>
+                <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
+                    <div class="card-body">
+                        {{ form_start(formCb) }}
+                        {{ form_row(formCb.nom) }}
+                        {{ form_row(formCb.prenom) }}
+                        {{ form_row(formCb.numero) }}
+                        {{ form_row(formCb.date) }}<!--Trouver un meilleur format pour la date mm/yy-->
+                        <button type="submit" class="btn btn-success">Valider</button>
+                        {{ form_end(formCb) }}
+                    </div>
+                </div>
+            </div>
+            <div class="card">
+                <div class="card-header" id="headingTwo">
+                    <button class="btn btn-link collapsed h3 mb-0" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
+                        Paypal
+                    </button>
+                </div>
+                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
+                    <div class="card-body">
+                        <a href="#"><button class="btn btn-primary">Redirection Paypal</button></a>
+                    </div>
+                </div>
+            </div>
+            <div class="card">
+                <div class="card-header" id="headingThree">
+                    <button class="btn btn-link collapsed h3 mb-0" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
+                        Coupon CPS
+                    </button>
+                </div>
+                <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample">
+                    <div class="card-body">
+                        <a href="#"><button class="btn btn-primary">Redirection Sandoz</button></a>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"77fef2da-796b-4674-a7d1-579c87ea4d81\" name=\"Default Changelist\" comment=\"formulaire d'inscription ok\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/Controller/SecurityController.php\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Form/RegistrationType.php\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/templates/security/index.html.twig\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\" doNotAsk=\"true\" synchronizationState=\"SYNCHRONIZE\">\r\n    <pharConfigPath>$PROJECT_DIR$/composer.json</pharConfigPath>\r\n    <execution />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"PhpWorkspaceProjectConfiguration\">\r\n    <include_path>\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/debug-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dependency-injection\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/deprecation-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/doctrine-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dom-crawler\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dotenv\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/error-handler\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/event-dispatcher\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/event-dispatcher-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/expression-language\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/filesystem\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/finder\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/flex\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/form\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/framework-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-client\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-client-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-foundation\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-kernel\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/intl\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/mailer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/maker-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/mime\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/monolog-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/monolog-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/notifier\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/options-resolver\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/phpunit-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-grapheme\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-icu\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-idn\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-normalizer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-mbstring\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-php73\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-php80\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/process\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/property-access\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/property-info\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/proxy-manager-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/routing\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-core\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-csrf\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-guard\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-http\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/serializer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/service-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/stopwatch\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/string\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/translation\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/translation-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/twig-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/twig-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/validator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/var-dumper\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/var-exporter\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-link\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-profiler-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-server-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/yaml\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/annotations\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/cache\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/collections\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/common\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/dbal\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/templating\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-fixtures-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-migrations-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/data-fixtures\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/event-manager\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/imagine/imagine\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/inflector\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/liip/imagine-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/instantiator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/lexer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/migrations\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/orm\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/persistence\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/sql-formatter\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/webmozart/assert\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/friendsofphp/proxy-manager-lts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/reflection-common\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/reflection-docblock\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/type-resolver\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/composer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/cache\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/container\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/event-dispatcher\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/link\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/log\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/stof/doctrine-extensions-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/twig/extra-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/twig/twig\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/behat/transliterator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/cocur/slugify\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/gedmo/doctrine-extensions\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/nikic/php-parser\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sensio/framework-extra-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/egulias/email-validator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/laminas/laminas-code\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/laminas/laminas-eventmanager\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/laminas/laminas-zendframework-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/monolog/monolog\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/asset\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/browser-kit\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/cache\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/cache-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/config\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/console\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/css-selector\" />\r\n    </include_path>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1oBqSGNEcCapCRWeYiSuRHY0dPE\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"project.scopes\" />\r\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"php bin/console doctrine:database:create\" />\r\n      <command value=\"php bin/console doctrine:migrations:migrate\" />\r\n      <command value=\"php bin/console doctrine:fixtures:load\" />\r\n      <command value=\"symfony\" />\r\n      <command value=\"symfony server:start\" />\r\n      <command value=\"php bin/console make:form RegistrationType\" />\r\n      <command value=\"php bin/concole make:controller\" />\r\n      <command value=\"php bin/console make:controller\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"77fef2da-796b-4674-a7d1-579c87ea4d81\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1612770329574</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1612770329574</updated>\r\n      <workItem from=\"1612770330763\" duration=\"13035000\" />\r\n      <workItem from=\"1612878980038\" duration=\"3543000\" />\r\n      <workItem from=\"1612943660295\" duration=\"10723000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"modification de la table membre\">\r\n      <created>1612772682946</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1612772682946</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"correction d'une erreur dans le fichier migration\">\r\n      <created>1612773979554</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1612773979554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"formulaire d'inscription ok\">\r\n      <created>1612953442565</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1612953442567</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"modification de la table membre\" />\r\n    <MESSAGE value=\"correction d'une erreur dans le fichier migration\" />\r\n    <MESSAGE value=\"formulaire d'inscription ok\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"formulaire d'inscription ok\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/.idea/workspace.xml	(date 1612956137685)
@@ -1,17 +1,36 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
+    <list default="true" id="a837c8ac-66b4-4569-9694-6d3b3e4b41d6" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/templates/cart/paiement.html.twig" afterDir="false" />
     <list default="true" id="77fef2da-796b-4674-a7d1-579c87ea4d81" name="Default Changelist" comment="formulaire d'inscription ok">
       <change afterPath="$PROJECT_DIR$/src/Controller/SecurityController.php" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/src/Form/RegistrationType.php" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/templates/security/index.html.twig" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/composer.json" beforeDir="false" afterPath="$PROJECT_DIR$/composer.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/migrations/Version20210127103615.php" beforeDir="false" afterPath="$PROJECT_DIR$/migrations/Version20210127103615.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Controller/CartController.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/CartController.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Controller/CommandeController.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/CommandeController.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DataFixtures/TypeProduitFixtures.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/DataFixtures/TypeProduitFixtures.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Entity/Cb.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Cb.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Entity/Facture.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Facture.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Entity/Membre.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Membre.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Entity/Pointretrait.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Pointretrait.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Entity/Produit.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Entity/Produit.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Form/CbType.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Form/CbType.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Service/CartService.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Service/CartService.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/base.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/templates/base.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/cart/index.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/templates/cart/index.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/cart/validation.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/templates/cart/validation.html.twig" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/paiement/index.html.twig" beforeDir="false" afterPath="$PROJECT_DIR$/src/DataFixtures/CbFixtures.php" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="ComposerSettings" doNotAsk="true">
   <component name="ComposerSettings" doNotAsk="true" synchronizationState="SYNCHRONIZE">
     <pharConfigPath>$PROJECT_DIR$/composer.json</pharConfigPath>
     <execution />
@@ -147,19 +166,13 @@
     <property name="node.js.path.for.package.eslint" value="project" />
     <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="nodejs_package_manager_path" value="npm" />
-    <property name="settings.editor.selected.configurable" value="project.scopes" />
     <property name="vue.rearranger.settings.migration" value="true" />
   </component>
   <component name="RunAnythingCache">
     <option name="myCommands">
+      <command value="symfony server:start" />
       <command value="php bin/console doctrine:database:create" />
       <command value="php bin/console doctrine:migrations:migrate" />
-      <command value="php bin/console doctrine:fixtures:load" />
-      <command value="symfony" />
-      <command value="symfony server:start" />
-      <command value="php bin/console make:form RegistrationType" />
-      <command value="php bin/concole make:controller" />
-      <command value="php bin/console make:controller" />
     </option>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
@@ -170,9 +183,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1612770329574</updated>
-      <workItem from="1612770330763" duration="13035000" />
-      <workItem from="1612878980038" duration="3543000" />
-      <workItem from="1612943660295" duration="10723000" />
+      <workItem from="1612770330763" duration="3592000" />
     </task>
     <task id="LOCAL-00001" summary="modification de la table membre">
       <created>1612772682946</created>
@@ -181,21 +192,7 @@
       <option name="project" value="LOCAL" />
       <updated>1612772682946</updated>
     </task>
-    <task id="LOCAL-00002" summary="correction d'une erreur dans le fichier migration">
-      <created>1612773979554</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1612773979554</updated>
-    </task>
-    <task id="LOCAL-00003" summary="formulaire d'inscription ok">
-      <created>1612953442565</created>
-      <option name="number" value="00003" />
-      <option name="presentableId" value="LOCAL-00003" />
-      <option name="project" value="LOCAL" />
-      <updated>1612953442567</updated>
-    </task>
-    <option name="localTasksCounter" value="4" />
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -211,12 +208,9 @@
         </entry>
       </map>
     </option>
-    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="modification de la table membre" />
-    <MESSAGE value="correction d'une erreur dans le fichier migration" />
-    <MESSAGE value="formulaire d'inscription ok" />
-    <option name="LAST_COMMIT_MESSAGE" value="formulaire d'inscription ok" />
+    <option name="LAST_COMMIT_MESSAGE" value="modification de la table membre" />
   </component>
 </project>
\ No newline at end of file
Index: migrations/Version20210127103615.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\ndeclare(strict_types = 1);\r\n\r\nnamespace DoctrineMigrations;\r\n\r\nuse Doctrine\\DBAL\\Schema\\Schema;\r\nuse Doctrine\\Migrations\\AbstractMigration;\r\n\r\n/**\r\n * Auto-generated Migration: Please modify to your needs!\r\n */\r\nfinal class Version20210127103615 extends AbstractMigration\r\n{\r\n    public function getDescription() : string\r\n    {\r\n        return '';\r\n    }\r\n\r\n    public function up(Schema $schema) : void\r\n    {\r\n        // this up() migration is auto-generated, please modify it to your needs\r\n        $this->addSql('CREATE TABLE pointretrait (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(150) NOT NULL, adresse2 VARCHAR(150) DEFAULT NULL, cp VARCHAR(5) NOT NULL, ville VARCHAR(150) NOT NULL, descr TEXT DEFAULT NULL, photo VARCHAR(255) DEFAULT NULL, ouverture TINYINT NOT NULL, fermeture TINYINT NOT NULL, jour TINYINT NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE categorie (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE cb (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, numero VARCHAR(255) NOT NULL, date DATE NOT NULL, INDEX membre_id (membre_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE commande (id INT AUTO_INCREMENT NOT NULL, facture_id INT DEFAULT NULL, membre_id INT DEFAULT NULL, date DATE DEFAULT NULL, cout_total NUMERIC(10, 2) DEFAULT NULL, INDEX membre_id (membre_id), INDEX facture_id (facture_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE commentaires (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, recette_id INT DEFAULT NULL, contenu TEXT NOT NULL, date DATETIME NOT NULL, rating_P INT DEFAULT NULL, rating_N INT DEFAULT NULL, INDEX recette_id (recette_id), INDEX membre_id (membre_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE commercial (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, prenom VARCHAR(150) NOT NULL, tel VARCHAR(10) DEFAULT NULL, email VARCHAR(255) NOT NULL, mdp VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE facture (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(150) NOT NULL, adresse2 VARCHAR(150) DEFAULT NULL, cp VARCHAR(5) NOT NULL, ville VARCHAR(150) NOT NULL, date_edition DATE NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE fournisseur (id INT AUTO_INCREMENT NOT NULL, comm_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(200) DEFAULT NULL, adresse2 VARCHAR(200) DEFAULT NULL,cp VARCHAR(5) NOT NULL, ville VARCHAR(100) NOT NULL, tel VARCHAR(10) NOT NULL, email VARCHAR(255) NOT NULL, photo VARCHAR(255) DEFAULT NULL, descr TEXT DEFAULT NULL, INDEX comm_id (comm_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE livrer (four_id INT NOT NULL, pr_id INT NOT NULL, INDEX IDX_E576B732E5AC00A4 (four_id), INDEX IDX_E576B73267C663E7 (pr_id), PRIMARY KEY(four_id, pr_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE membre (id INT AUTO_INCREMENT NOT NULL, pr_id INT DEFAULT NULL, civilite VARCHAR(4) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, nom VARCHAR(50) DEFAULT NULL, adresse1 VARCHAR(200) DEFAULT NULL, adresse2 VARCHAR(200) DEFAULT NULL, cp VARCHAR(5) DEFAULT NULL, ville VARCHAR(150) DEFAULT NULL, tel VARCHAR(10) DEFAULT NULL, email VARCHAR(255) NOT NULL, bloque TINYINT(1) DEFAULT 0, pseudo VARCHAR(20) NOT NULL, photo VARCHAR(255) DEFAULT NULL, mdp VARCHAR(255) NOT NULL, niveau TINYINT DEFAULT 1, inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP, desinscription DATE DEFAULT NULL, descr TEXT DEFAULT NULL, INDEX pr_id (pr_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE produit (id INT AUTO_INCREMENT NOT NULL, four_id INT DEFAULT NULL, tp_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, ref VARCHAR(10) NOT NULL, stock NUMERIC(15, 2) DEFAULT NULL, prix NUMERIC(6, 2) NOT NULL, nbUniteMesure INT NOT NULL, uniteMesure VARCHAR(20) NOT NULL, saison TINYINT DEFAULT NULL, descr TEXT DEFAULT NULL, photo VARCHAR(255) NOT NULL, INDEX four_id (four_id), INDEX tp_id (tp_id), UNIQUE INDEX ref (ref), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE ingredient (produit_id INT NOT NULL, recette_id INT NOT NULL, INDEX IDX_6BAF7870F347EFB (produit_id), INDEX IDX_6BAF787089312FE9 (recette_id), PRIMARY KEY(produit_id, recette_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE ligne_commande (produit_id INT NOT NULL, commande_id INT NOT NULL, INDEX IDX_3170B74BF347EFB (produit_id), INDEX IDX_3170B74B82EA2E54 (commande_id), PRIMARY KEY(produit_id, commande_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE produit_favori (produit_id INT NOT NULL, membre_id INT NOT NULL, INDEX IDX_18D769F6F347EFB (produit_id), INDEX IDX_18D769F66A99F74A (membre_id), PRIMARY KEY(produit_id, membre_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE recette (id INT AUTO_INCREMENT NOT NULL, cat_id INT DEFAULT NULL, auteur INT DEFAULT NULL, theme_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, active TINYINT(1) DEFAULT 1, descr TEXT NOT NULL, photo VARCHAR(255) DEFAULT NULL, rating_P INT DEFAULT NULL, rating_N INT DEFAULT NULL, tps_prep INT NOT NULL, tps_cuisson INT DEFAULT NULL, portion INT NOT NULL, difficulte TINYINT NOT NULL, INDEX membre_id (auteur), INDEX cat_id (cat_id), INDEX theme_id (theme_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE favorite (recette_id INT NOT NULL, membre_id INT NOT NULL, INDEX IDX_68C58ED989312FE9 (recette_id), INDEX IDX_68C58ED96A99F74A (membre_id), PRIMARY KEY(recette_id, membre_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE stream (id INT AUTO_INCREMENT NOT NULL, streamer_id INT DEFAULT NULL, st_date DATE NOT NULL, nom VARCHAR(150) NOT NULL, st_url VARCHAR(255) NOT NULL, descr TEXT DEFAULT NULL, INDEX streamer_id (streamer_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE streamer (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, date_debut DATE NOT NULL, date_fin DATE DEFAULT NULL, INDEX membre_id (membre_id), UNIQUE INDEX id (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE theme (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('CREATE TABLE type_produit (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(50) NOT NULL, descr TEXT(300) DEFAULT NULL, photo VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\r\n        $this->addSql('ALTER TABLE cb ADD CONSTRAINT FK_ACB52AEF6A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');\r\n        $this->addSql('ALTER TABLE commande ADD CONSTRAINT FK_6EEAA67D7F2DEE08 FOREIGN KEY (facture_id) REFERENCES facture (id)');\r\n        $this->addSql('ALTER TABLE commande ADD CONSTRAINT FK_6EEAA67D6A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');\r\n        $this->addSql('ALTER TABLE commentaires ADD CONSTRAINT FK_D9BEC0C46A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');\r\n        $this->addSql('ALTER TABLE commentaires ADD CONSTRAINT FK_D9BEC0C489312FE9 FOREIGN KEY (recette_id) REFERENCES recette (id)');\r\n        $this->addSql('ALTER TABLE fournisseur ADD CONSTRAINT FK_369ECA32EF7EB489 FOREIGN KEY (comm_id) REFERENCES commercial (id)');\r\n        $this->addSql('ALTER TABLE livrer ADD CONSTRAINT FK_E576B732E5AC00A4 FOREIGN KEY (four_id) REFERENCES fournisseur (id)');\r\n        $this->addSql('ALTER TABLE livrer ADD CONSTRAINT FK_E576B73267C663E7 FOREIGN KEY (pr_id) REFERENCES pointretrait (id)');\r\n        $this->addSql('ALTER TABLE membre ADD CONSTRAINT FK_F6B4FB2967C663E7 FOREIGN KEY (pr_id) REFERENCES pointretrait (id)');\r\n        $this->addSql('ALTER TABLE produit ADD CONSTRAINT FK_29A5EC27E5AC00A4 FOREIGN KEY (four_id) REFERENCES fournisseur (id)');\r\n        $this->addSql('ALTER TABLE produit ADD CONSTRAINT FK_29A5EC27384F0DAC FOREIGN KEY (tp_id) REFERENCES type_produit (id)');\r\n        $this->addSql('ALTER TABLE ingredient ADD CONSTRAINT FK_6BAF7870F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id)');\r\n        $this->addSql('ALTER TABLE ingredient ADD CONSTRAINT FK_6BAF787089312FE9 FOREIGN KEY (recette_id) REFERENCES recette (id)');\r\n        $this->addSql('ALTER TABLE ligne_commande ADD CONSTRAINT FK_3170B74BF347EFB FOREIGN KEY (produit_id) REFERENCES produit (id)');\r\n        $this->addSql('ALTER TABLE ligne_commande ADD CONSTRAINT FK_3170B74B82EA2E54 FOREIGN KEY (commande_id) REFERENCES commande (id)');\r\n        $this->addSql('ALTER TABLE produit_favori ADD CONSTRAINT FK_18D769F6F347EFB FOREIGN KEY (produit_id) REFERENCES produit (id)');\r\n        $this->addSql('ALTER TABLE produit_favori ADD CONSTRAINT FK_18D769F66A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');\r\n        $this->addSql('ALTER TABLE recette ADD CONSTRAINT FK_49BB6390E6ADA943 FOREIGN KEY (cat_id) REFERENCES categorie (id)');\r\n        $this->addSql('ALTER TABLE recette ADD CONSTRAINT FK_49BB639055AB140 FOREIGN KEY (auteur) REFERENCES membre (id)');\r\n        $this->addSql('ALTER TABLE recette ADD CONSTRAINT FK_49BB639059027487 FOREIGN KEY (theme_id) REFERENCES theme (id)');\r\n        $this->addSql('ALTER TABLE favorite ADD CONSTRAINT FK_68C58ED989312FE9 FOREIGN KEY (recette_id) REFERENCES recette (id)');\r\n        $this->addSql('ALTER TABLE favorite ADD CONSTRAINT FK_68C58ED96A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');\r\n        $this->addSql('ALTER TABLE stream ADD CONSTRAINT FK_F0E9BE1C25F432AD FOREIGN KEY (streamer_id) REFERENCES streamer (id)');\r\n        $this->addSql('ALTER TABLE streamer ADD CONSTRAINT FK_2DF6AE326A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');\r\n    }\r\n\r\n    public function down(Schema $schema) : void\r\n    {\r\n        // this down() migration is auto-generated, please modify it to your needs\r\n        $this->addSql('ALTER TABLE livrer DROP FOREIGN KEY FK_E576B73267C663E7');\r\n        $this->addSql('ALTER TABLE membre DROP FOREIGN KEY FK_F6B4FB2967C663E7');\r\n        $this->addSql('ALTER TABLE recette DROP FOREIGN KEY FK_49BB6390E6ADA943');\r\n        $this->addSql('ALTER TABLE ligne_commande DROP FOREIGN KEY FK_3170B74B82EA2E54');\r\n        $this->addSql('ALTER TABLE fournisseur DROP FOREIGN KEY FK_369ECA32EF7EB489');\r\n        $this->addSql('ALTER TABLE commande DROP FOREIGN KEY FK_6EEAA67D7F2DEE08');\r\n        $this->addSql('ALTER TABLE livrer DROP FOREIGN KEY FK_E576B732E5AC00A4');\r\n        $this->addSql('ALTER TABLE produit DROP FOREIGN KEY FK_29A5EC27E5AC00A4');\r\n        $this->addSql('ALTER TABLE cb DROP FOREIGN KEY FK_ACB52AEF6A99F74A');\r\n        $this->addSql('ALTER TABLE commande DROP FOREIGN KEY FK_6EEAA67D6A99F74A');\r\n        $this->addSql('ALTER TABLE commentaires DROP FOREIGN KEY FK_D9BEC0C46A99F74A');\r\n        $this->addSql('ALTER TABLE produit_favori DROP FOREIGN KEY FK_18D769F66A99F74A');\r\n        $this->addSql('ALTER TABLE recette DROP FOREIGN KEY FK_49BB639055AB140');\r\n        $this->addSql('ALTER TABLE favorite DROP FOREIGN KEY FK_68C58ED96A99F74A');\r\n        $this->addSql('ALTER TABLE streamer DROP FOREIGN KEY FK_2DF6AE326A99F74A');\r\n        $this->addSql('ALTER TABLE ingredient DROP FOREIGN KEY FK_6BAF7870F347EFB');\r\n        $this->addSql('ALTER TABLE ligne_commande DROP FOREIGN KEY FK_3170B74BF347EFB');\r\n        $this->addSql('ALTER TABLE produit_favori DROP FOREIGN KEY FK_18D769F6F347EFB');\r\n        $this->addSql('ALTER TABLE commentaires DROP FOREIGN KEY FK_D9BEC0C489312FE9');\r\n        $this->addSql('ALTER TABLE ingredient DROP FOREIGN KEY FK_6BAF787089312FE9');\r\n        $this->addSql('ALTER TABLE favorite DROP FOREIGN KEY FK_68C58ED989312FE9');\r\n        $this->addSql('ALTER TABLE stream DROP FOREIGN KEY FK_F0E9BE1C25F432AD');\r\n        $this->addSql('ALTER TABLE recette DROP FOREIGN KEY FK_49BB639059027487');\r\n        $this->addSql('ALTER TABLE produit DROP FOREIGN KEY FK_29A5EC27384F0DAC');\r\n        $this->addSql('DROP TABLE pointretrait');\r\n        $this->addSql('DROP TABLE categorie');\r\n        $this->addSql('DROP TABLE cb');\r\n        $this->addSql('DROP TABLE commande');\r\n        $this->addSql('DROP TABLE commentaires');\r\n        $this->addSql('DROP TABLE commercial');\r\n        $this->addSql('DROP TABLE facture');\r\n        $this->addSql('DROP TABLE fournisseur');\r\n        $this->addSql('DROP TABLE livrer');\r\n        $this->addSql('DROP TABLE membre');\r\n        $this->addSql('DROP TABLE produit');\r\n        $this->addSql('DROP TABLE ingredient');\r\n        $this->addSql('DROP TABLE ligne_commande');\r\n        $this->addSql('DROP TABLE produit_favori');\r\n        $this->addSql('DROP TABLE recette');\r\n        $this->addSql('DROP TABLE favorite');\r\n        $this->addSql('DROP TABLE stream');\r\n        $this->addSql('DROP TABLE streamer');\r\n        $this->addSql('DROP TABLE theme');\r\n        $this->addSql('DROP TABLE type_produit');\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/migrations/Version20210127103615.php b/migrations/Version20210127103615.php
--- a/migrations/Version20210127103615.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/migrations/Version20210127103615.php	(date 1612956137721)
@@ -20,26 +20,26 @@
     public function up(Schema $schema) : void
     {
         // this up() migration is auto-generated, please modify it to your needs
-        $this->addSql('CREATE TABLE pointretrait (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(150) NOT NULL, adresse2 VARCHAR(150) DEFAULT NULL, cp VARCHAR(5) NOT NULL, ville VARCHAR(150) NOT NULL, descr TEXT DEFAULT NULL, photo VARCHAR(255) DEFAULT NULL, ouverture TINYINT NOT NULL, fermeture TINYINT NOT NULL, jour TINYINT NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE pointretrait (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(150) NOT NULL, adresse2 VARCHAR(150) DEFAULT NULL, cp VARCHAR(5) NOT NULL, ville VARCHAR(150) NOT NULL, descr TEXT DEFAULT NULL, photo VARCHAR(255) DEFAULT "default.jpg", ouverture TINYINT NOT NULL, fermeture TINYINT NOT NULL, jour TINYINT NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE categorie (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE cb (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, numero VARCHAR(255) NOT NULL, date DATE NOT NULL, INDEX membre_id (membre_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE cb (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, numero VARCHAR(255) NOT NULL, date VARCHAR(5) NOT NULL, lastDigits VARCHAR(4) NOT NULL, INDEX membre_id (membre_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE commande (id INT AUTO_INCREMENT NOT NULL, facture_id INT DEFAULT NULL, membre_id INT DEFAULT NULL, date DATE DEFAULT NULL, cout_total NUMERIC(10, 2) DEFAULT NULL, INDEX membre_id (membre_id), INDEX facture_id (facture_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE commentaires (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, recette_id INT DEFAULT NULL, contenu TEXT NOT NULL, date DATETIME NOT NULL, rating_P INT DEFAULT NULL, rating_N INT DEFAULT NULL, INDEX recette_id (recette_id), INDEX membre_id (membre_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE commercial (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, prenom VARCHAR(150) NOT NULL, tel VARCHAR(10) DEFAULT NULL, email VARCHAR(255) NOT NULL, mdp VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE facture (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(150) NOT NULL, adresse2 VARCHAR(150) DEFAULT NULL, cp VARCHAR(5) NOT NULL, ville VARCHAR(150) NOT NULL, date_edition DATE NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE fournisseur (id INT AUTO_INCREMENT NOT NULL, comm_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(200) DEFAULT NULL, adresse2 VARCHAR(200) DEFAULT NULL,cp VARCHAR(5) NOT NULL, ville VARCHAR(100) NOT NULL, tel VARCHAR(10) NOT NULL, email VARCHAR(255) NOT NULL, photo VARCHAR(255) DEFAULT NULL, descr TEXT DEFAULT NULL, INDEX comm_id (comm_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE facture (id INT AUTO_INCREMENT NOT NULL, civilite TINYINT DEFAULT 0, nom VARCHAR(255) NOT NULL, prenom VARCHAR(150) NOT NULL, adresse1 VARCHAR(150) NOT NULL, adresse2 VARCHAR(150) DEFAULT NULL, cp VARCHAR(5) NOT NULL, ville VARCHAR(150) NOT NULL, date_edition TIMESTAMP DEFAULT CURRENT_TIMESTAMP, paiement TINYINT DEFAULT 0, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE fournisseur (id INT AUTO_INCREMENT NOT NULL, comm_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, adresse1 VARCHAR(200) DEFAULT NULL, adresse2 VARCHAR(200) DEFAULT NULL,cp VARCHAR(5) NOT NULL, ville VARCHAR(100) NOT NULL, tel VARCHAR(10) DEFAULT NULL, email VARCHAR(255) NOT NULL, photo VARCHAR(255) DEFAULT "default.jpg", descr TEXT DEFAULT NULL, INDEX comm_id (comm_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE livrer (four_id INT NOT NULL, pr_id INT NOT NULL, INDEX IDX_E576B732E5AC00A4 (four_id), INDEX IDX_E576B73267C663E7 (pr_id), PRIMARY KEY(four_id, pr_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE membre (id INT AUTO_INCREMENT NOT NULL, pr_id INT DEFAULT NULL, civilite VARCHAR(4) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, nom VARCHAR(50) DEFAULT NULL, adresse1 VARCHAR(200) DEFAULT NULL, adresse2 VARCHAR(200) DEFAULT NULL, cp VARCHAR(5) DEFAULT NULL, ville VARCHAR(150) DEFAULT NULL, tel VARCHAR(10) DEFAULT NULL, email VARCHAR(255) NOT NULL, bloque TINYINT(1) DEFAULT 0, pseudo VARCHAR(20) NOT NULL, photo VARCHAR(255) DEFAULT NULL, mdp VARCHAR(255) NOT NULL, niveau TINYINT DEFAULT 1, inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP, desinscription DATE DEFAULT NULL, descr TEXT DEFAULT NULL, INDEX pr_id (pr_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE membre (id INT AUTO_INCREMENT NOT NULL, pr_id INT DEFAULT NULL, civilite VARCHAR(4) DEFAULT NULL, prenom VARCHAR(50) DEFAULT NULL, nom VARCHAR(50) DEFAULT NULL, adresse1 VARCHAR(200) DEFAULT NULL, adresse2 VARCHAR(200) DEFAULT NULL, cp VARCHAR(5) DEFAULT NULL, ville VARCHAR(150) DEFAULT NULL, tel VARCHAR(10) DEFAULT NULL, email VARCHAR(255) NOT NULL, bloque TINYINT(1) DEFAULT 0, pseudo VARCHAR(20) NOT NULL, photo VARCHAR(255) DEFAULT "default.jpg", mdp VARCHAR(255) NOT NULL, niveau TINYINT DEFAULT 1, inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP, desinscription DATE DEFAULT NULL, descr TEXT DEFAULT NULL, INDEX pr_id (pr_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE produit (id INT AUTO_INCREMENT NOT NULL, four_id INT DEFAULT NULL, tp_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, ref VARCHAR(10) NOT NULL, stock NUMERIC(15, 2) DEFAULT NULL, prix NUMERIC(6, 2) NOT NULL, nbUniteMesure INT NOT NULL, uniteMesure VARCHAR(20) NOT NULL, saison TINYINT DEFAULT NULL, descr TEXT DEFAULT NULL, photo VARCHAR(255) NOT NULL, INDEX four_id (four_id), INDEX tp_id (tp_id), UNIQUE INDEX ref (ref), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE ingredient (produit_id INT NOT NULL, recette_id INT NOT NULL, INDEX IDX_6BAF7870F347EFB (produit_id), INDEX IDX_6BAF787089312FE9 (recette_id), PRIMARY KEY(produit_id, recette_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE ligne_commande (produit_id INT NOT NULL, commande_id INT NOT NULL, INDEX IDX_3170B74BF347EFB (produit_id), INDEX IDX_3170B74B82EA2E54 (commande_id), PRIMARY KEY(produit_id, commande_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE ligne_commande (produit_id INT NOT NULL, quantite INT NOT NULL, prix INT NOT NULL, commande_id INT NOT NULL, INDEX IDX_3170B74BF347EFB (produit_id), INDEX IDX_3170B74B82EA2E54 (commande_id), PRIMARY KEY(produit_id, commande_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE produit_favori (produit_id INT NOT NULL, membre_id INT NOT NULL, INDEX IDX_18D769F6F347EFB (produit_id), INDEX IDX_18D769F66A99F74A (membre_id), PRIMARY KEY(produit_id, membre_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE recette (id INT AUTO_INCREMENT NOT NULL, cat_id INT DEFAULT NULL, auteur INT DEFAULT NULL, theme_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, active TINYINT(1) DEFAULT 1, descr TEXT NOT NULL, photo VARCHAR(255) DEFAULT NULL, rating_P INT DEFAULT NULL, rating_N INT DEFAULT NULL, tps_prep INT NOT NULL, tps_cuisson INT DEFAULT NULL, portion INT NOT NULL, difficulte TINYINT NOT NULL, INDEX membre_id (auteur), INDEX cat_id (cat_id), INDEX theme_id (theme_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE recette (id INT AUTO_INCREMENT NOT NULL, cat_id INT DEFAULT NULL, auteur INT DEFAULT NULL, theme_id INT DEFAULT NULL, nom VARCHAR(150) NOT NULL, active TINYINT(1) DEFAULT 1, descr TEXT NOT NULL, photo VARCHAR(255) DEFAULT "default.jpg", rating_P INT DEFAULT NULL, rating_N INT DEFAULT NULL, tps_prep INT NOT NULL, tps_cuisson INT DEFAULT NULL, portion INT NOT NULL, difficulte TINYINT NOT NULL, INDEX membre_id (auteur), INDEX cat_id (cat_id), INDEX theme_id (theme_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE favorite (recette_id INT NOT NULL, membre_id INT NOT NULL, INDEX IDX_68C58ED989312FE9 (recette_id), INDEX IDX_68C58ED96A99F74A (membre_id), PRIMARY KEY(recette_id, membre_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE stream (id INT AUTO_INCREMENT NOT NULL, streamer_id INT DEFAULT NULL, st_date DATE NOT NULL, nom VARCHAR(150) NOT NULL, st_url VARCHAR(255) NOT NULL, descr TEXT DEFAULT NULL, INDEX streamer_id (streamer_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE streamer (id INT AUTO_INCREMENT NOT NULL, membre_id INT DEFAULT NULL, date_debut DATE NOT NULL, date_fin DATE DEFAULT NULL, INDEX membre_id (membre_id), UNIQUE INDEX id (id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('CREATE TABLE theme (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
-        $this->addSql('CREATE TABLE type_produit (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(50) NOT NULL, descr TEXT(300) DEFAULT NULL, photo VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
+        $this->addSql('CREATE TABLE type_produit (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(50) NOT NULL, descr TEXT(300) DEFAULT NULL, photo VARCHAR(255) DEFAULT "default.jpg", PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');
         $this->addSql('ALTER TABLE cb ADD CONSTRAINT FK_ACB52AEF6A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');
         $this->addSql('ALTER TABLE commande ADD CONSTRAINT FK_6EEAA67D7F2DEE08 FOREIGN KEY (facture_id) REFERENCES facture (id)');
         $this->addSql('ALTER TABLE commande ADD CONSTRAINT FK_6EEAA67D6A99F74A FOREIGN KEY (membre_id) REFERENCES membre (id)');
Index: src/Service/CartService.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\nnamespace App\\Service;\r\n\r\nuse App\\Repository\\ProduitRepository;\r\nuse Symfony\\Component\\HttpFoundation\\Session\\SessionInterface;\r\n\r\n\r\nclass CartService{\r\n\r\n    protected $session;\r\n    protected $produitRepository;\r\n\r\n    /**\r\n     * CartService constructor.\r\n     * @param SessionInterface $session\r\n     * @param ProduitRepository $produitRepository\r\n     */\r\n    public function __construct(SessionInterface $session, ProduitRepository $produitRepository){\r\n        $this->session = $session;\r\n        $this->produitRepository = $produitRepository;\r\n    }\r\n\r\n    /**\r\n     * function pour ajouter un produit dans le panier\r\n     * @param int $id\r\n     */\r\n    public function add(int $id) : void{\r\n        //la methode get va chercher la variable $panier dans l'objet $session. Si le panier n'existe pas, il va le créer en créant un tableau vide\r\n        $panier = $this->session->get('panier', []);\r\n        if(!empty($panier[$id])){\r\n            $panier[$id]++;\r\n        }else $panier[$id]= 1;\r\n        $this->session->set('panier', $panier);\r\n    }\r\n\r\n    /**\r\n     * function pour supprimer un produit du panier\r\n     * @param int $id\r\n     */\r\n    public function removeAll(int $id) : void{\r\n        //la methode get va chercher la variable $panier dans l'objet $session. Si le panier n'existe pas, il va le créer en créant un tableau vide\r\n        $panier = $this->session->get('panier', []);\r\n        if(!empty($panier[$id])){\r\n            unset($panier[$id]);\r\n        }\r\n        $this->session->set('panier', $panier);\r\n    }\r\n\r\n    /**\r\n     * function pour supprimer un produit du panier\r\n     * @param int $id\r\n     */\r\n    public function remove(int $id) : void{\r\n        //la methode get va chercher la variable $panier dans l'objet $session. Si le panier n'existe pas, il va le créer en créant un tableau vide\r\n        $panier = $this->session->get('panier', []);\r\n        //si le panier n'est pas vide et que le produit est bien présent dans le panier, on réduit sa quantité de 1\r\n        if((!empty($panier[$id]))&&($panier[$id]!==0))\r\n        {\r\n            $panier[$id]--;\r\n            //si la quantité du produit est à 0, on le supprime du panier\r\n            if($panier[$id]===0) unset($panier[$id]);\r\n        }\r\n        $this->session->set('panier', $panier);\r\n    }\r\n\r\n    /**\r\n     * function pour vider le panier\r\n     */\r\n    public function empty() : void{\r\n        $this->session->clear('panier');\r\n    }\r\n\r\n    /**\r\n     * fonction qui retourne le panier sous forme de table id => quantite\r\n     * @return array\r\n     */\r\n    public function getCart() : array{\r\n        return $this->session->get('panier', []);\r\n    }\r\n\r\n\r\n    /**\r\n     * fonction qui retourne le panier sous forme de tableau,\r\n     * avec la quantité des produits et le détail des produits (class Produit)\r\n     * @return array\r\n     */\r\n    public function getFullCart() : array{\r\n        //on récupère le panier\r\n        $panier = $this->session->get('panier', []);\r\n        $panierWithData = [];\r\n        foreach($panier as $id => $quantity):\r\n            //on affecte les détails du produit et sa quantité dans le tableau $panierWithData\r\n            $panierWithData[] = [\r\n                'produit' => $this->produitRepository->find($id),\r\n                'quantite' => $quantity\r\n            ];\r\n        endforeach;\r\n        //on retourne la panier avec le détail des produits\r\n        return $panierWithData;\r\n    }\r\n\r\n    /**\r\n     * fonction qui retourne le total du panier\r\n     * @return float\r\n     */\r\n    public function getTotal() : float{\r\n        $total = 0;\r\n        foreach($this->getFullCart() as $item):\r\n            //on incrémente $total avec la total pour chaque produit\r\n            $total += $item['produit']->getPrix()*$item['quantite'];\r\n        endforeach;\r\n        return $total;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Service/CartService.php b/src/Service/CartService.php
--- a/src/Service/CartService.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Service/CartService.php	(date 1612956137757)
@@ -21,7 +21,7 @@
     }
 
     /**
-     * function pour ajouter un produit dans le panier
+     * méthode pour ajouter un produit dans le panier
      * @param int $id
      */
     public function add(int $id) : void{
@@ -34,7 +34,7 @@
     }
 
     /**
-     * function pour supprimer un produit du panier
+     * méthode pour supprimer la quantité totale d'un produit du panier
      * @param int $id
      */
     public function removeAll(int $id) : void{
@@ -47,7 +47,7 @@
     }
 
     /**
-     * function pour supprimer un produit du panier
+     * méthode pour supprimer un produit du panier
      * @param int $id
      */
     public function remove(int $id) : void{
@@ -64,14 +64,14 @@
     }
 
     /**
-     * function pour vider le panier
+     * méthode pour vider le panier
      */
     public function empty() : void{
-        $this->session->clear('panier');
+        $this->session->clear();
     }
 
     /**
-     * fonction qui retourne le panier sous forme de table id => quantite
+     * méthode qui retourne le panier sous forme de table id => quantite
      * @return array
      */
     public function getCart() : array{
@@ -80,7 +80,7 @@
 
 
     /**
-     * fonction qui retourne le panier sous forme de tableau,
+     * methode qui retourne le panier sous forme de tableau,
      * avec la quantité des produits et le détail des produits (class Produit)
      * @return array
      */
@@ -88,26 +88,28 @@
         //on récupère le panier
         $panier = $this->session->get('panier', []);
         $panierWithData = [];
-        foreach($panier as $id => $quantity):
-            //on affecte les détails du produit et sa quantité dans le tableau $panierWithData
-            $panierWithData[] = [
-                'produit' => $this->produitRepository->find($id),
-                'quantite' => $quantity
-            ];
-        endforeach;
+        if(!empty($panier)){
+            foreach($panier as $id => $quantity):
+                //on affecte les détails du produit et sa quantité dans le tableau $panierWithData
+                $panierWithData[] = [
+                    'produit' => $this->produitRepository->find($id),
+                    'quantite' => $quantity
+                ];
+            endforeach;
+        }
         //on retourne la panier avec le détail des produits
         return $panierWithData;
     }
 
     /**
-     * fonction qui retourne le total du panier
+     * méthode qui retourne le total du panier
      * @return float
      */
     public function getTotal() : float{
         $total = 0;
         foreach($this->getFullCart() as $item):
-            //on incrémente $total avec la total pour chaque produit
-            $total += $item['produit']->getPrix()*$item['quantite'];
+            //on incrémente $total avec le total de chaque produit
+            $total += $item['produit']->getPrix() * $item['quantite'];
         endforeach;
         return $total;
     }
Index: src/Form/CbType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Form;\r\n\r\nuse App\\Entity\\Cb;\r\nuse Symfony\\Component\\Form\\AbstractType;\r\nuse Symfony\\Component\\Form\\FormBuilderInterface;\r\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\r\n\r\nclass CbType extends AbstractType\r\n{\r\n    public function buildForm(FormBuilderInterface $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('nom')\r\n            ->add('prenom')\r\n            ->add('numero')\r\n            ->add('date')\r\n        ;\r\n    }\r\n\r\n    public function configureOptions(OptionsResolver $resolver)\r\n    {\r\n        $resolver->setDefaults([\r\n            'data_class' => Cb::class,\r\n        ]);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/CbType.php b/src/Form/CbType.php
--- a/src/Form/CbType.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Form/CbType.php	(date 1612956137765)
@@ -12,10 +12,10 @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         $builder
-            ->add('nom')
-            ->add('prenom')
-            ->add('numero')
-            ->add('date')
+            ->add('nom', null, ['label'=>'Nom du titulaire de la carte',  'help'=>'exemple: Dupont', 'required'=>true])
+            ->add('prenom', null, ['label'=>'Prénom du titulaire de la carte', 'help'=>'exemple: Henry', 'required'=>true])
+            ->add('numero', null, ['label'=>'Numéro de la carte bancaire', 'required'=>true])
+            ->add('date', null, ['label'=>'Date d\'expiration', 'required'=>true])
         ;
     }
 
Index: composer.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"type\": \"project\",\r\n    \"license\": \"proprietary\",\r\n    \"minimum-stability\": \"dev\",\r\n    \"prefer-stable\": true,\r\n    \"require\": {\r\n        \"php\": \">=7.2.5\",\r\n        \"ext-ctype\": \"*\",\r\n        \"ext-iconv\": \"*\",\r\n        \"cocur/slugify\": \"^4.0\",\r\n        \"composer/package-versions-deprecated\": \"1.11.99.1\",\r\n        \"doctrine/annotations\": \"^1.0\",\r\n        \"doctrine/doctrine-bundle\": \"^2.2\",\r\n        \"doctrine/doctrine-migrations-bundle\": \"^3.0\",\r\n        \"doctrine/orm\": \"^2.8\",\r\n        \"imagine/imagine\": \"^1.2\",\r\n        \"liip/imagine-bundle\": \"^2.4\",\r\n        \"phpdocumentor/reflection-docblock\": \"^5.2\",\r\n        \"sensio/framework-extra-bundle\": \"^5.1\",\r\n        \"stof/doctrine-extensions-bundle\": \"^1.5\",\r\n        \"symfony/asset\": \"5.2.*\",\r\n        \"symfony/console\": \"5.2.*\",\r\n        \"symfony/dotenv\": \"5.2.*\",\r\n        \"symfony/expression-language\": \"5.2.*\",\r\n        \"symfony/flex\": \"^1.3.1\",\r\n        \"symfony/form\": \"5.2.*\",\r\n        \"symfony/framework-bundle\": \"5.2.*\",\r\n        \"symfony/http-client\": \"5.2.*\",\r\n        \"symfony/intl\": \"5.2.*\",\r\n        \"symfony/mailer\": \"5.2.*\",\r\n        \"symfony/mime\": \"5.2.*\",\r\n        \"symfony/monolog-bundle\": \"^3.1\",\r\n        \"symfony/notifier\": \"5.2.*\",\r\n        \"symfony/process\": \"5.2.*\",\r\n        \"symfony/property-access\": \"5.2.*\",\r\n        \"symfony/property-info\": \"5.2.*\",\r\n        \"symfony/proxy-manager-bridge\": \"5.2.*\",\r\n        \"symfony/security-bundle\": \"5.2.*\",\r\n        \"symfony/serializer\": \"5.2.*\",\r\n        \"symfony/string\": \"5.2.*\",\r\n        \"symfony/translation\": \"5.2.*\",\r\n        \"symfony/twig-bridge\": \"5.2.*\",\r\n        \"symfony/twig-bundle\": \"^5.2\",\r\n        \"symfony/validator\": \"5.2.*\",\r\n        \"symfony/web-link\": \"5.2.*\",\r\n        \"symfony/web-server-bundle\": \"^4.4\",\r\n        \"symfony/yaml\": \"5.2.*\",\r\n        \"twig/extra-bundle\": \"^2.12|^3.0\",\r\n        \"twig/twig\": \"^2.12|^3.0\",\r\n    },\r\n    \"require-dev\": {\r\n        \"doctrine/doctrine-fixtures-bundle\": \"^3.4\",\r\n        \"symfony/browser-kit\": \"^5.2\",\r\n        \"symfony/css-selector\": \"^5.2\",\r\n        \"symfony/debug-bundle\": \"^5.2\",\r\n        \"symfony/maker-bundle\": \"^1.0\",\r\n        \"symfony/phpunit-bridge\": \"^5.2\",\r\n        \"symfony/stopwatch\": \"^5.2\",\r\n        \"symfony/var-dumper\": \"^5.2\",\r\n        \"symfony/web-profiler-bundle\": \"^5.2\"\r\n    },\r\n    \"config\": {\r\n        \"optimize-autoloader\": true,\r\n        \"preferred-install\": {\r\n            \"*\": \"dist\"\r\n        },\r\n        \"sort-packages\": true\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"src/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"App\\\\Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"replace\": {\r\n        \"symfony/polyfill-ctype\": \"*\",\r\n        \"symfony/polyfill-iconv\": \"*\",\r\n        \"symfony/polyfill-php72\": \"*\"\r\n    },\r\n    \"scripts\": {\r\n        \"auto-scripts\": {\r\n            \"cache:clear\": \"symfony-cmd\",\r\n            \"assets:install %PUBLIC_DIR%\": \"symfony-cmd\"\r\n        },\r\n        \"post-install-cmd\": [\r\n            \"@auto-scripts\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"@auto-scripts\"\r\n        ]\r\n    },\r\n    \"conflict\": {\r\n        \"symfony/symfony\": \"*\"\r\n    },\r\n    \"extra\": {\r\n        \"symfony\": {\r\n            \"allow-contrib\": false,\r\n            \"require\": \"5.2.*\"\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/composer.json b/composer.json
--- a/composer.json	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/composer.json	(date 1612956137774)
@@ -13,11 +13,8 @@
         "doctrine/doctrine-bundle": "^2.2",
         "doctrine/doctrine-migrations-bundle": "^3.0",
         "doctrine/orm": "^2.8",
-        "imagine/imagine": "^1.2",
-        "liip/imagine-bundle": "^2.4",
         "phpdocumentor/reflection-docblock": "^5.2",
         "sensio/framework-extra-bundle": "^5.1",
-        "stof/doctrine-extensions-bundle": "^1.5",
         "symfony/asset": "5.2.*",
         "symfony/console": "5.2.*",
         "symfony/dotenv": "5.2.*",
@@ -43,7 +40,6 @@
         "symfony/twig-bundle": "^5.2",
         "symfony/validator": "5.2.*",
         "symfony/web-link": "5.2.*",
-        "symfony/web-server-bundle": "^4.4",
         "symfony/yaml": "5.2.*",
         "twig/extra-bundle": "^2.12|^3.0",
         "twig/twig": "^2.12|^3.0",
Index: src/DataFixtures/CbFixtures.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DataFixtures/CbFixtures.php b/src/DataFixtures/CbFixtures.php
new file mode 100644
--- /dev/null	(date 1612955061624)
+++ b/src/DataFixtures/CbFixtures.php	(date 1612955061624)
@@ -0,0 +1,29 @@
+<?php
+
+namespace App\DataFixtures;
+
+use App\Entity\Membre;
+use App\Entity\Cb;
+use Doctrine\Bundle\FixturesBundle\Fixture;
+use Doctrine\Persistence\ObjectManager;
+
+class CbFixtures extends Fixture
+
+{
+    public function load(ObjectManager $manager)
+    {
+        for($i=1;$i<10;$i++):
+
+            $membre = new Membre();
+            $cb = new Cb();
+            $cb->setMembre($this->createOne(Membre::class, 1));
+                ->setNom("NomMembre".$i)
+                ->setPrenom("PrenomMembre".$i)
+                ->setNumero(password_hash('1111222233334444', PASSWORD_BCRYPT, ['cost'=>12]))
+                ->setLastDigits("4444")
+                ->setDate(["03","22"]);
+            $manager->persist($cb);
+        endfor;
+        $manager->flush();
+    }
+}
\ No newline at end of file
Index: src/Controller/CommandeController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\n\r\nnamespace App\\Controller;\r\n\r\nuse App\\Repository\\MembreRepository;\r\nuse App\\Repository\\PaiementRepository;\r\nuse App\\Service\\CartService;\r\nuse Doctrine\\ORM\\EntityManagerInterface;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse \\Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\nclass PaiementController extends AbstractController\r\n{\r\n\r\n    /**\r\n     * @var CartService\r\n     */\r\n    protected $cartService;\r\n    /**\r\n     * @var PaiementRepository\r\n     */\r\n    private $repository;\r\n    /**\r\n     * @var EntityManagerInterface\r\n     */\r\n    private $em;\r\n\r\n    public function __construct(PaiementRepository $repository, EntityManagerInterface $em,CartService $cartService){\r\n        $this->cartService = $cartService;\r\n        $this->repository = $repository;\r\n        $this->em = $em;\r\n    }\r\n\r\n    /**\r\n     * @Route(\"paiement\", name=\"paiement.index\")\r\n     * @return Response\r\n     */\r\n    public function index(){\r\n        // 'membre' sera à modifier une fois que les pages d'authentification seront créées\r\n        return $this->render('paiement/index.html.twig', [\r\n                'panier' => $this->cartService->getFullCart(),\r\n                'total'=> $this->cartService->getTotal(),\r\n                'membre' => (new MembreRepository())->find(1),\r\n                'current_menu' => 'panier'\r\n                ]);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/CommandeController.php b/src/Controller/CommandeController.php
--- a/src/Controller/CommandeController.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Controller/CommandeController.php	(date 1612956137787)
@@ -4,14 +4,14 @@
 namespace App\Controller;
 
 use App\Repository\MembreRepository;
-use App\Repository\PaiementRepository;
+use App\Repository\CommandeRepository;
 use App\Service\CartService;
 use Doctrine\ORM\EntityManagerInterface;
 use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
 use Symfony\Component\HttpFoundation\Response;
 use \Symfony\Component\Routing\Annotation\Route;
 
-class PaiementController extends AbstractController
+class CommandeController extends AbstractController
 {
 
     /**
@@ -27,7 +27,7 @@
      */
     private $em;
 
-    public function __construct(PaiementRepository $repository, EntityManagerInterface $em,CartService $cartService){
+    public function __construct(CommandeRepository $repository, EntityManagerInterface $em,CartService $cartService){
         $this->cartService = $cartService;
         $this->repository = $repository;
         $this->em = $em;
Index: src/DataFixtures/TypeProduitFixtures.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\DataFixtures;\r\n\r\nuse App\\Entity\\TypeProduit;\r\nuse Doctrine\\Bundle\\FixturesBundle\\Fixture;\r\nuse Doctrine\\Persistence\\ObjectManager;\r\n\r\nclass TypeProduitFixtures extends Fixture\r\n{\r\n    public function load(ObjectManager $manager)\r\n    {\r\n\r\n        for($i=0;$i<10;$i++):\r\n            $tp = new TypeProduit();\r\n            $tp->setNom(\"Type n°\".$i.\" de Produits\")\r\n                ->setDescr(\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\")\r\n                ->setPhoto(\"jpg\");\r\n            $manager->persist($tp);\r\n        endfor;\r\n        $manager->flush();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DataFixtures/TypeProduitFixtures.php b/src/DataFixtures/TypeProduitFixtures.php
--- a/src/DataFixtures/TypeProduitFixtures.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/DataFixtures/TypeProduitFixtures.php	(date 1612956137796)
@@ -15,7 +15,7 @@
             $tp = new TypeProduit();
             $tp->setNom("Type n°".$i." de Produits")
                 ->setDescr("Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.")
-                ->setPhoto("jpg");
+                ->setPhoto("default.jpg");
             $manager->persist($tp);
         endfor;
         $manager->flush();
Index: templates/base.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>{% block title %}Welcome{% endblock %}</title>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\r\n    {% block stylesheets %}{% endblock %}\r\n    {% block javascripts %}{% endblock %}\r\n</head>\r\n<body>\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-warning\">\r\n    <a class=\"navbar-brand\" href=\"{{path('home')}}\">Kouizine</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link {% if current_menu is defined and current_menu == 'pointretrait' %}active{% endif %}\" href=\"{{path('pointretrait.index')}}\">Nos Points Retrait</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link href=\"#\">Nos Fournisseurs</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link {% if current_menu is defined and current_menu == 'produit' %}active{% endif %}\" href=\"{{path('produit.index')}}\">Nos Produits</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link {% if current_menu is defined and current_menu == 'recette' %}active{% endif %}\" href=\"{{path('recette')}}\">Nos Recettes</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link {% if current_menu is defined and current_menu == 'inscription' %}active{% endif %}\" href=\"{{path('security_registration')}}\">Inscription</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Dropdown link\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                    <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link {% if current_menu is defined and current_menu == 'panier' %}active{% endif %}\" href=\"{{path('cart.index')}}\"><i class=\"fas fa-shopping-cart mr-1\"></i>Mon Panier</a>\r\n            </li>\r\n        </ul>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n</nav>\r\n<div class=\"container\">\r\n{% block body %}\r\n{% endblock %}\r\n<!---FONTAWESOME--->\r\n<script src=\"https://kit.fontawesome.com/be73289548.js\" crossorigin=\"anonymous\"></script>\r\n<!---BOOTSTRAP--->\r\n<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossorigin=\"anonymous\"></script>\r\n<script src=\"./../assets/JS/script.js\"></script>\r\n</div>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base.html.twig b/templates/base.html.twig
--- a/templates/base.html.twig	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/templates/base.html.twig	(date 1612956137815)
@@ -1,5 +1,5 @@
 <!DOCTYPE html>
-<html>
+<html lang="fr">
 <head>
     <meta charset="UTF-8">
     <title>{% block title %}Welcome{% endblock %}</title>
@@ -19,7 +19,7 @@
                 <a class="nav-link {% if current_menu is defined and current_menu == 'pointretrait' %}active{% endif %}" href="{{path('pointretrait.index')}}">Nos Points Retrait</a>
             </li>
             <li class="nav-item">
-                <a class="nav-link href="#">Nos Fournisseurs</a>
+                <a class="nav-link" href="#">Nos Fournisseurs</a>
             </li>
             <li class="nav-item">
                 <a class="nav-link {% if current_menu is defined and current_menu == 'produit' %}active{% endif %}" href="{{path('produit.index')}}">Nos Produits</a>
@@ -52,6 +52,12 @@
     </div>
 </nav>
 <div class="container">
+    <!--AFFICHAGE DES MESSAGES DE SUCCES LORS DU PAIEMENT DE LA COMMANDE , etc -->
+    {% for message in app.flashes('success')%}
+        <div class="alert alert-success">
+            {{ message }}
+        </div>
+    {% endfor %}
 {% block body %}
 {% endblock %}
 <!---FONTAWESOME--->
Index: src/Entity/Facture.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\nuse App\\Repository\\FactureRepository;\r\n\r\n/**\r\n * Facture\r\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\FactureRepository\", repositoryClass=FactureRepository::class)\r\n * @ORM\\Table(name=\"facture\")\r\n */\r\nclass Facture\r\n{\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"nom\", type=\"string\", length=150, nullable=false)\r\n     */\r\n    private $nom;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"adresse1\", type=\"string\", length=150, nullable=false)\r\n     */\r\n    private $adresse1;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"adresse2\", type=\"string\", length=150, nullable=true)\r\n     */\r\n    private $adresse2;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"cp\", type=\"string\", length=5, nullable=false)\r\n     */\r\n    private $cp;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"ville\", type=\"string\", length=150, nullable=false)\r\n     */\r\n    private $ville;\r\n\r\n    /**\r\n     * @var \\DateTime\r\n     *\r\n     * @ORM\\Column(name=\"date_edition\", type=\"date\", nullable=false)\r\n     */\r\n    private $dateEdition;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=20)\r\n     */\r\n    private $modePaiement;\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getNom(): ?string\r\n    {\r\n        return $this->nom;\r\n    }\r\n\r\n    public function setNom(string $nom): self\r\n    {\r\n        $this->nom = $nom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getAdresse1(): ?string\r\n    {\r\n        return $this->adresse1;\r\n    }\r\n\r\n    public function setAdresse1(string $adresse1): self\r\n    {\r\n        $this->adresse1 = $adresse1;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getAdresse2(): ?string\r\n    {\r\n        return $this->adresse2;\r\n    }\r\n\r\n    public function setAdresse2(?string $adresse2): self\r\n    {\r\n        $this->adresse2 = $adresse2;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getCp(): ?string\r\n    {\r\n        return $this->cp;\r\n    }\r\n\r\n    public function setCp(string $cp): self\r\n    {\r\n        $this->cp = $cp;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getVille(): ?string\r\n    {\r\n        return $this->ville;\r\n    }\r\n\r\n    public function setVille(string $ville): self\r\n    {\r\n        $this->ville = $ville;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDateEdition(): ?\\DateTimeInterface\r\n    {\r\n        return $this->dateEdition;\r\n    }\r\n\r\n    public function setDateEdition(\\DateTimeInterface $dateEdition): self\r\n    {\r\n        $this->dateEdition = $dateEdition;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getModePaiement(): ?string\r\n    {\r\n        return $this->modePaiement;\r\n    }\r\n\r\n    public function setModePaiement(string $modePaiement): self\r\n    {\r\n        $this->modePaiement = $modePaiement;\r\n\r\n        return $this;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Facture.php b/src/Entity/Facture.php
--- a/src/Entity/Facture.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Entity/Facture.php	(date 1612956137830)
@@ -2,8 +2,12 @@
 
 namespace App\Entity;
 
+use DateTime;
+use DateTimeInterface;
 use Doctrine\ORM\Mapping as ORM;
 use App\Repository\FactureRepository;
+use Symfony\Component\Validator\Constraints as Assert;
+use Symfony\Component\Validator\Constraints\Date;
 
 /**
  * Facture
@@ -12,6 +16,17 @@
  */
 class Facture
 {
+    /**
+     * @var array|string représentant les différents types de paiement disponibles
+     */
+    public const PAIEMENT = [0 => "Carte Bancaire", 1 => "Paypal"];
+
+    /**
+     * @var array|string représentant les différentes civilités
+     */
+    public const CIVILITE = [1 => "Madame", 2 => "Mademoiselle", 3 => "Monsieur", 0=>"Inconnue" ];
+
+
     /**
      * @var int
      *
@@ -21,10 +36,24 @@
      */
     private $id;
 
+    /**
+     * @var int
+     * @ORM\Column(type="smallint")
+     */
+    private $civilite;
+
+    /**
+     * @var string
+     * @ORM\Column(type="string", length=150)
+     * @Assert\Length(min=2, max=150)
+     */
+    private $prenom;
+
     /**
      * @var string
      *
      * @ORM\Column(name="nom", type="string", length=150, nullable=false)
+     * @Assert\Length(min=5, max=255)
      */
     private $nom;
 
@@ -32,6 +61,7 @@
      * @var string
      *
      * @ORM\Column(name="adresse1", type="string", length=150, nullable=false)
+     * @Assert\Length(min=5, max=150)
      */
     private $adresse1;
 
@@ -39,6 +69,7 @@
      * @var string|null
      *
      * @ORM\Column(name="adresse2", type="string", length=150, nullable=true)
+     * @Assert\Length(min=5, max=150)
      */
     private $adresse2;
 
@@ -46,6 +77,7 @@
      * @var string
      *
      * @ORM\Column(name="cp", type="string", length=5, nullable=false)
+     * @Assert\Length(min=5, max=5)
      */
     private $cp;
 
@@ -53,20 +85,28 @@
      * @var string
      *
      * @ORM\Column(name="ville", type="string", length=150, nullable=false)
+     * @Assert\Length(min=5, max=150)
      */
     private $ville;
 
     /**
-     * @var \DateTime
+     * @var DateTime
      *
      * @ORM\Column(name="date_edition", type="date", nullable=false)
      */
     private $dateEdition;
 
     /**
-     * @ORM\Column(type="string", length=20)
+     * @var int
+     * @ORM\Column(type="smallint")
      */
-    private $modePaiement;
+    private $paiement;
+
+    public function __construct(){
+        $this->setDateEdition(new DateTime());
+        $this->setCivilite(0);
+        $this->setPaiement(0);
+    }
 
     public function getId(): ?int
     {
@@ -133,27 +173,49 @@
         return $this;
     }
 
-    public function getDateEdition(): ?\DateTimeInterface
+    public function getDateEdition(): Date
     {
-        return $this->dateEdition;
+        return date('m/d/Y', $this->dateEdition);
     }
 
-    public function setDateEdition(\DateTimeInterface $dateEdition): self
+    public function setDateEdition(DateTimeInterface $dateEdition): self
     {
         $this->dateEdition = $dateEdition;
 
         return $this;
     }
 
-    public function getModePaiement(): ?string
+    public function getPaiement(): ?string
+    {
+        return (self::PAIEMENT[$this->paiement]);
+    }
+
+    public function setPaiement(int $paiement): self
+    {
+        $this->paiement = $paiement;
+
+        return $this;
+    }
+
+    public function getPrenom(): ?string
+    {
+        return $this->prenom;
+    }
+
+    public function setPrenom(string $prenom): self
     {
-        return $this->modePaiement;
+        $this->prenom = $prenom;
+        return $this;
     }
 
-    public function setModePaiement(string $modePaiement): self
+    public function getCivilite(): ?string
     {
-        $this->modePaiement = $modePaiement;
+        return (self::CIVILITE[$this->civilite]);
+    }
 
+    public function setCivilite(int $civilite): self
+    {
+        $this->civilite = $civilite;
         return $this;
     }
 
Index: src/Entity/Membre.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse DateTime;\r\nuse Doctrine\\Common\\Collections\\ArrayCollection;\r\nuse Doctrine\\Common\\Collections\\Collection;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\nuse Symfony\\Component\\Security\\Core\\User\\UserInterface;\r\nuse Symfony\\Component\\Validator\\Constraints as Assert;\r\nuse App\\Repository\\MembreRepository;\r\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\r\n\r\n\r\n\r\n\r\n//@UniqueEntity pour s'assurer que les valeurs indiqués sont unique dans la bdd'\r\n/**\r\n * Membre\r\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\MembreRepository\", repositoryClass=MembreRepository::class)\r\n * @ORM\\Table(name=\"membre\", indexes={@ORM\\Index(name=\"pr_id\", columns={\"pr_id\"})})\r\n * @UniqueEntity(\r\n *     fields={\"email\"},\r\n *     message= \"L'email indiqué est déjà utilisé\"\r\n * )\r\n * @UniqueEntity(\r\n *     fields={\"pseudo\"},\r\n *     message= \"Le nom d'utilisateur indiqué est déjà utilisé\"\r\n * )\r\n */\r\nclass Membre implements UserInterface\r\n{\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"civilite\", type=\"string\", length=4, nullable=false)\r\n     */\r\n    private $civilite;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"prenom\", type=\"string\", length=50, nullable=false)\r\n     */\r\n    private $prenom;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"nom\", type=\"string\", length=50, nullable=false)\r\n     */\r\n    private $nom;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"adresse1\", type=\"string\", length=200, nullable=true)\r\n     */\r\n    private $adresse1;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"adresse2\", type=\"string\", length=200, nullable=true)\r\n     */\r\n    private $adresse2;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"cp\", type=\"string\", length=5, nullable=true)\r\n     */\r\n    private $cp;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"ville\", type=\"string\", length=150, nullable=false)\r\n     */\r\n    private $ville;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"tel\", type=\"string\", length=10, nullable=true)\r\n     */\r\n    private $tel;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"email\", type=\"string\", length=255, nullable=false)\r\n     * @Assert\\Email()\r\n     */\r\n    private $email;\r\n\r\n    /**\r\n     * @var bool|null\r\n     *\r\n     * @ORM\\Column(name=\"bloque\", type=\"boolean\", nullable=true)\r\n     */\r\n    private $bloque = '0';\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"pseudo\", type=\"string\", length=20, nullable=true)\r\n     * @Assert\\Length(\r\n     *      min = 3,\r\n     *      max = 20,\r\n     *      minMessage = \"Votre nom doit contenir un minimum de {{ limit }} caractéres\",\r\n     *      maxMessage = \"Votre nom doit contenir un maximum de {{ limit }} caractéres\",\r\n     *      allowEmptyString = false\r\n     * )\r\n     */\r\n    private $pseudo;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"photo\", type=\"string\", length=255, nullable=true)\r\n     */\r\n    private $photo;\r\n//\" @Assert\\Length(min=8, minMessage = \"Votre mot de passe doit contenir un minimum de {{ limit }} caractéres\")\"\r\n// gére la longueur minimum du mdp et configure un message d'erreur\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"mdp\", type=\"string\", length=255, nullable=false)\r\n     * @Assert\\Length(min=8,\r\n     *      minMessage = \"Votre mot de passe doit contenir un minimum de {{ limit }} caractéres\")\r\n     */\r\n    private $mdp;\r\n\r\n    /**\r\n     * @var bool|null\r\n     *\r\n     * @ORM\\Column(name=\"niveau\", type=\"boolean\", nullable=true)\r\n     */\r\n    private $niveau;\r\n\r\n    /**\r\n     * @var DateTime\r\n     *\r\n     * @ORM\\Column(name=\"inscription\", type=\"datetime\", nullable=false)\r\n     */\r\n    private $inscription;\r\n\r\n    /**\r\n     * @var DateTime|null\r\n     *\r\n     * @ORM\\Column(name=\"desinscription\", type=\"date\", nullable=true)\r\n     */\r\n    private $desinscription;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"descr\", type=\"text\", length=65535, nullable=true)\r\n     */\r\n    private $descr;\r\n\r\n    /**\r\n     * @var \\Pointretrait\r\n     *\r\n     * @ORM\\ManyToOne(targetEntity=\"Pointretrait\")\r\n     * @ORM\\JoinColumns({\r\n     *   @ORM\\JoinColumn(name=\"pr_id\", referencedColumnName=\"id\")\r\n     * })\r\n     */\r\n    private $pr;\r\n\r\n    /**\r\n     * @var \\Doctrine\\Common\\Collections\\Collection\r\n     *\r\n     * @ORM\\ManyToMany(targetEntity=\"Recette\", mappedBy=\"membre\")\r\n     */\r\n    private $recette;\r\n\r\n    /**\r\n     * @var \\Doctrine\\Common\\Collections\\Collection\r\n     *\r\n     * @ORM\\ManyToMany(targetEntity=\"Produit\", mappedBy=\"membre\")\r\n     */\r\n    private $produit;\r\n\r\n//variable servant à la confirmation des mots de passe.\r\n//---\r\n// \"@Assert\\EqualTo (propertyPath=\"mdp\",message=\"Votre mot de passe et la confirmation ne correspondent pas\") \"\r\n// sert à vérifier que les valeur $mdp et $confirm_password sont identiques\r\n\r\n    /**\r\n     * @Assert\\EqualTo (propertyPath=\"mdp\",message=\"Votre mot de passe et la confirmation ne correspondent pas\")\r\n     */\r\n    public $confirm_password;\r\n\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    public function __construct()\r\n    {\r\n        $this->recette = new \\Doctrine\\Common\\Collections\\ArrayCollection();\r\n        $this->produit = new \\Doctrine\\Common\\Collections\\ArrayCollection();\r\n        $this->inscription = new DateTime(\"now\");\r\n    }\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getCivilite(): ?string\r\n    {\r\n        return $this->civilite;\r\n    }\r\n\r\n    public function setCivilite(string $civilite): self\r\n    {\r\n        $this->civilite = $civilite;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPrenom(): ?string\r\n    {\r\n        return $this->prenom;\r\n    }\r\n\r\n    public function setPrenom(string $prenom): self\r\n    {\r\n        $this->prenom = $prenom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getNom(): ?string\r\n    {\r\n        return $this->nom;\r\n    }\r\n\r\n    public function setNom(string $nom): self\r\n    {\r\n        $this->nom = $nom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getAdresse1(): ?string\r\n    {\r\n        return $this->adresse1;\r\n    }\r\n\r\n    public function setAdresse1(?string $adresse1): self\r\n    {\r\n        $this->adresse1 = $adresse1;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getAdresse2(): ?string\r\n    {\r\n        return $this->adresse2;\r\n    }\r\n\r\n    public function setAdresse2(?string $adresse2): self\r\n    {\r\n        $this->adresse2 = $adresse2;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getCp(): ?string\r\n    {\r\n        return $this->cp;\r\n    }\r\n\r\n    public function setCp(?string $cp): self\r\n    {\r\n        $this->cp = $cp;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getVille(): ?string\r\n    {\r\n        return $this->ville;\r\n    }\r\n\r\n    public function setVille(string $ville): self\r\n    {\r\n        $this->ville = $ville;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTel(): ?string\r\n    {\r\n        return $this->tel;\r\n    }\r\n\r\n    public function setTel(?string $tel): self\r\n    {\r\n        $this->tel = $tel;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getEmail(): ?string\r\n    {\r\n        return $this->email;\r\n    }\r\n\r\n    public function setEmail(string $email): self\r\n    {\r\n        $this->email = $email;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getBloque(): ?bool\r\n    {\r\n        return $this->bloque;\r\n    }\r\n\r\n    public function setBloque(?bool $bloque): self\r\n    {\r\n        $this->bloque = $bloque;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPseudo(): ?string\r\n    {\r\n        return $this->pseudo;\r\n    }\r\n\r\n    public function setPseudo(?string $pseudo): self\r\n    {\r\n        $this->pseudo = $pseudo;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPhoto(): ?string\r\n    {\r\n        return $this->photo;\r\n    }\r\n\r\n    public function setPhoto(?string $photo): self\r\n    {\r\n        $this->photo = $photo;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getMdp(): ?string\r\n    {\r\n        return $this->mdp;\r\n    }\r\n\r\n    public function setMdp(string $mdp): self\r\n    {\r\n        $this->mdp = $mdp;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getNiveau(): ?bool\r\n    {\r\n        return $this->niveau;\r\n    }\r\n\r\n    public function setNiveau(?bool $niveau): self\r\n    {\r\n        $this->niveau = $niveau;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getInscription(): ?\\DateTimeInterface\r\n    {\r\n        return $this->inscription;\r\n    }\r\n\r\n    public function setInscription(\\DateTimeInterface $inscription): self\r\n    {\r\n        $this->inscription = $inscription;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDesinscription(): ?\\DateTimeInterface\r\n    {\r\n        return $this->desinscription;\r\n    }\r\n\r\n    public function setDesinscription(?\\DateTimeInterface $desinscription): self\r\n    {\r\n        $this->desinscription = $desinscription;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDescr(): ?string\r\n    {\r\n        return $this->descr;\r\n    }\r\n\r\n    public function setDescr(?string $descr): self\r\n    {\r\n        $this->descr = $descr;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPr(): ?Pointretrait\r\n    {\r\n        return $this->pr;\r\n    }\r\n\r\n    public function setPr(?Pointretrait $pr): self\r\n    {\r\n        $this->pr = $pr;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Recette[]\r\n     */\r\n    public function getRecette(): Collection\r\n    {\r\n        return $this->recette;\r\n    }\r\n\r\n    public function addRecette(Recette $recette): self\r\n    {\r\n        if (!$this->recette->contains($recette)) {\r\n            $this->recette[] = $recette;\r\n            $recette->addMembre($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeRecette(Recette $recette): self\r\n    {\r\n        if ($this->recette->removeElement($recette)) {\r\n            $recette->removeMembre($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Produit[]\r\n     */\r\n    public function getProduit(): Collection\r\n    {\r\n        return $this->produit;\r\n    }\r\n\r\n    public function addProduit(Produit $produit): self\r\n    {\r\n        if (!$this->produit->contains($produit)) {\r\n            $this->produit[] = $produit;\r\n            $produit->addMembre($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeProduit(Produit $produit): self\r\n    {\r\n        if ($this->produit->removeElement($produit)) {\r\n            $produit->removeMembre($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n//les 4 fonctions suivantes sont necessaire au module de sécurité UserInterface\r\n    public function eraseCredentials()\r\n    {\r\n        // TODO: Implement eraseCredentials() method.\r\n    }\r\n\r\n    public function getSalt()\r\n    {\r\n        // TODO: Implement getSalt() method.\r\n    }\r\n//sert à gérer les roles de sutilisateurs\r\n    public function getRoles()\r\n    {\r\n        return ['ROLE_USER'];\r\n    }\r\n\r\n    public function getUsername(): ?string\r\n    {\r\n        return $this->pseudo;\r\n    }\r\n\r\n    public function getPassword(): ?string\r\n    {\r\n        return $this->mdp;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Membre.php b/src/Entity/Membre.php
--- a/src/Entity/Membre.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Entity/Membre.php	(date 1612956137841)
@@ -158,7 +158,7 @@
     /**
      * @var DateTime|null
      *
-     * @ORM\Column(name="desinscription", type="date", nullable=true)
+     * @ORM\Column(name="desinscription", type="datetime", nullable=true)
      */
     private $desinscription;
 
@@ -387,15 +387,14 @@
         return $this;
     }
 
-    public function getInscription(): ?\DateTimeInterface
+    public function getInscription(): string
     {
-        return $this->inscription;
+        return $this->inscription->format('d-m-Y');
     }
 
     public function setInscription(\DateTimeInterface $inscription): self
     {
         $this->inscription = $inscription;
-
         return $this;
     }
 
@@ -485,7 +484,6 @@
         if ($this->produit->removeElement($produit)) {
             $produit->removeMembre($this);
         }
-
         return $this;
     }
 //les 4 fonctions suivantes sont necessaire au module de sécurité UserInterface
Index: src/Entity/Pointretrait.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse App\\Repository\\PointretraitRepository;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\nuse Cocur\\Slugify\\Slugify;\r\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\r\nuse Symfony\\Component\\Validator\\Constraints as Assert;\r\nuse Doctrine\\Common\\Collections\\ArrayCollection;\r\nuse Doctrine\\Common\\Collections\\Collection;\r\n\r\n/**\r\n * Pointretrait\r\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\PointretraitRepository\", repositoryClass=PointretraitRepository::class)\r\n * @ORM\\Table(name=\"pointretrait\")\r\n * @UniqueEntity(\"nom\") //ceci définit le champs \"nom\" comme unique dans la base de données. Les erreurs de doublons seront ainsi traitées\r\n */\r\nclass Pointretrait\r\n{\r\n    const HORAIRES = [\r\n        0 => \"08:00\", 1 => \"08:30\", 2 => \"09:00\", 3 => \"09:30\", 4 => \"10:00\",\r\n        5 => \"10:30\", 6 => \"11:00\", 7 => \"11:30\", 8 => \"12:00\", 9 => \"12:30\",\r\n        10 => \"13:00\", 11 => \"13:30\", 12 => \"14:00\", 13 => \"14:30\", 14 => \"15:00\",\r\n        15 => \"15:30\", 16 => \"16:00\", 17 => \"16:30\", 18 => \"17:00\", 19 => \"17:30\",\r\n        20 => \"18:00\", 21 => \"18:30\", 22 => \"19:00\", 23 => \"19:30\", 24 => \"20:00\",\r\n    ];\r\n    const JOURS = ['Lundi','Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\r\n\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"nom\", type=\"string\", length=150, nullable=false)\r\n     * @Assert\\Length(min=5, max=150)\r\n     */\r\n    private $nom;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"adresse1\", type=\"string\", length=150, nullable=false)\r\n     * @Assert\\Length(min=5, max=150)\r\n     */\r\n    private $adresse1;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"adresse2\", type=\"string\", length=150, nullable=true)\r\n     * @Assert\\Length(max=150)\r\n     */\r\n    private $adresse2;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"cp\", type=\"string\", length=5, nullable=false)\r\n     * @Assert\\Length(min=5, max=5)\r\n     * @Assert\\Regex(\"/^[0-9]{5}/\")\r\n     */\r\n    private $cp;\r\n\r\n    /**\r\n     * @var string\r\n     *\r\n     * @ORM\\Column(name=\"ville\", type=\"string\", length=150, nullable=false)\r\n     * @Assert\\Length(min=3, max=150)\r\n     * @Assert\\Regex(\"/^[a-zA-Z\\-éèêàâïìîòôù0-9\\s]{150}/\")\r\n     */\r\n    private $ville;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"descr\", type=\"text\", length=65535, nullable=true)\r\n     * @Assert\\Regex(\"/^[a-zA-Z\\-éèêàâïìîòôù0-9\\/\\+\\@\\s]{150}/\")\r\n     * @Assert\\Length(max=65535)\r\n     */\r\n    private $descr;\r\n\r\n    /**\r\n     * @var string|null\r\n     *\r\n     * @ORM\\Column(name=\"photo\", type=\"string\", length=255, nullable=true)\r\n     * @Assert\\Regex(\"/^([a-zA-Z0-9]{1,250})(\\.jpg|\\.jpeg|\\.png)/\")\r\n     */\r\n    private $photo;\r\n\r\n    /**\r\n     * heure d'ouverture du point retrait (voir const HORAIRES[])\r\n     * @var int\r\n     * @ORM\\Column(name=\"ouverture\", type=\"integer\", nullable=false)\r\n     */\r\n    private $ouverture;\r\n\r\n    /**\r\n     * heure de fermeture du point retrait (voir const HORAIRES[])\r\n     * @var int\r\n     * @ORM\\Column(name=\"fermeture\", type=\"integer\", nullable=false)\r\n     */\r\n    private $fermeture;\r\n\r\n    /**\r\n     * jour d'ouverture du point retrait (voir const JOURS[])\r\n     * @var int\r\n     * @ORM\\Column(name=\"jour\", type=\"integer\", nullable=false)\r\n     */\r\n    private $jour;\r\n\r\n    /**\r\n     * @var int\r\n     *\r\n     * @ORM\\Column(name=\"email\", type=\"string\", length=255, nullable=false)\r\n     */\r\n    private $email;\r\n\r\n    /**\r\n     * @var \\Doctrine\\Common\\Collections\\Collection\r\n     *\r\n     * @ORM\\ManyToMany(targetEntity=\"Fournisseur\", mappedBy=\"pr\")\r\n     */\r\n    private $four;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    public function __construct()\r\n    {\r\n        $this->four = new \\Doctrine\\Common\\Collections\\ArrayCollection();\r\n    }\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getNom(): ?string\r\n    {\r\n        return $this->nom;\r\n    }\r\n\r\n    public function setNom(string $nom): self\r\n    {\r\n        $this->nom = $nom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getSlug(): string\r\n    {\r\n        return (new Slugify())->slugify($this->nom);\r\n    }\r\n\r\n    public function getAdresse1(): ?string\r\n    {\r\n        return $this->adresse1;\r\n    }\r\n\r\n    public function setAdresse1(string $adresse1): self\r\n    {\r\n        $this->adresse1 = $adresse1;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getAdresse2(): ?string\r\n    {\r\n        return $this->adresse2;\r\n    }\r\n\r\n    public function setAdresse2(?string $adresse2): self\r\n    {\r\n        $this->adresse2 = $adresse2;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getCp(): ?string\r\n    {\r\n        return $this->cp;\r\n    }\r\n\r\n    public function setCp(string $cp): self\r\n    {\r\n        $this->cp = $cp;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getVille(): ?string\r\n    {\r\n        return $this->ville;\r\n    }\r\n\r\n    public function setVille(string $ville): self\r\n    {\r\n        $this->ville = $ville;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDescr(): ?string\r\n    {\r\n        return $this->descr;\r\n    }\r\n\r\n    public function setDescr(?string $descr): self\r\n    {\r\n        $this->descr = $descr;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPhoto(): ?string\r\n    {\r\n        return $this->photo;\r\n    }\r\n\r\n    public function setPhoto(?string $photo): self\r\n    {\r\n        $this->photo = $photo;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOuverture(): ?string\r\n    {\r\n        return self::HORAIRES[$this->ouverture];\r\n    }\r\n\r\n    public function setOuverture(int $ouverture): self\r\n    {\r\n        $this->ouverture = $ouverture;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getFermeture(): ?string\r\n    {\r\n        return self::HORAIRES[$this->fermeture];\r\n    }\r\n\r\n    public function setFermeture(int $fermeture): self\r\n    {\r\n        $this->fermeture = $fermeture;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getJour(): ?string\r\n    {\r\n        return self::JOURS[$this->jour];\r\n    }\r\n\r\n    public function setJour(int $jour): self\r\n    {\r\n        $this->jour = $jour;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getEmail(): ?string\r\n    {\r\n        return $this->email;\r\n    }\r\n\r\n    public function setEmail(string $email): self\r\n    {\r\n        $this->email = $email;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return Collection|Fournisseur[]\r\n     */\r\n    public function getFour(): Collection\r\n    {\r\n        return $this->four;\r\n    }\r\n\r\n    public function addFour(Fournisseur $four): self\r\n    {\r\n        if (!$this->four->contains($four)) {\r\n            $this->four[] = $four;\r\n            $four->addPr($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function removeFour(Fournisseur $four): self\r\n    {\r\n        if ($this->four->removeElement($four)) {\r\n            $four->removePr($this);\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Pointretrait.php b/src/Entity/Pointretrait.php
--- a/src/Entity/Pointretrait.php	(revision b5dcb36f8cac4864f5e183181d3e887aa2df6bf0)
+++ b/src/Entity/Pointretrait.php	(date 1612956137849)
@@ -3,16 +3,17 @@
 namespace App\Entity;
 
 use App\Repository\PointretraitRepository;
+use App\Entity\Fournisseur;
+use Doctrine\Common\Collections\ArrayCollection;
 use Doctrine\ORM\Mapping as ORM;
 use Cocur\Slugify\Slugify;
 use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
 use Symfony\Component\Validator\Constraints as Assert;
-use Doctrine\Common\Collections\ArrayCollection;
 use Doctrine\Common\Collections\Collection;
 
 /**
  * Pointretrait
- * @ORM\Entity(repositoryClass="App\Repository\PointretraitRepository", repositoryClass=PointretraitRepository::class)
+ * @ORM\Entity(repositoryClass=PointretraitRepository::class)
  * @ORM\Table(name="pointretrait")
  * @UniqueEntity("nom") //ceci définit le champs "nom" comme unique dans la base de données. Les erreurs de doublons seront ainsi traitées
  */
@@ -135,7 +136,7 @@
      */
     public function __construct()
     {
-        $this->four = new \Doctrine\Common\Collections\ArrayCollection();
+        $this->four = new ArrayCollection();
     }
 
     public function getId(): ?int
diff --git a/templates/paiement/index.html.twig b/templates/paiement/index.html.twig
deleted file mode 100644
